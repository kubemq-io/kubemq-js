"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.kubemq = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.27.3
 * source: kubemq.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
var pb_1 = require("google-protobuf");
var grpc_1 = require("@grpc/grpc-js");
var kubemq;
(function (kubemq) {
    var _PingResult_one_of_decls, _Empty_one_of_decls, _Result_one_of_decls, _Event_one_of_decls, _EventReceive_one_of_decls, _Subscribe_one_of_decls, _Request_one_of_decls, _Response_one_of_decls, _QueueMessage_one_of_decls, _QueueMessagesBatchRequest_one_of_decls, _QueueMessagesBatchResponse_one_of_decls, _QueueMessageAttributes_one_of_decls, _QueueMessagePolicy_one_of_decls, _SendQueueMessageResult_one_of_decls, _ReceiveQueueMessagesRequest_one_of_decls, _ReceiveQueueMessagesResponse_one_of_decls, _AckAllQueueMessagesRequest_one_of_decls, _AckAllQueueMessagesResponse_one_of_decls, _StreamQueueMessagesRequest_one_of_decls, _StreamQueueMessagesResponse_one_of_decls, _QueuesUpstreamRequest_one_of_decls, _QueuesUpstreamResponse_one_of_decls, _QueuesDownstreamRequest_one_of_decls, _QueuesDownstreamResponse_one_of_decls, _QueueInfo_one_of_decls, _QueuesInfo_one_of_decls, _QueuesInfoRequest_one_of_decls, _QueuesInfoResponse_one_of_decls;
    var StreamRequestType;
    (function (StreamRequestType) {
        StreamRequestType[StreamRequestType["StreamRequestTypeUnknown"] = 0] = "StreamRequestTypeUnknown";
        StreamRequestType[StreamRequestType["ReceiveMessage"] = 1] = "ReceiveMessage";
        StreamRequestType[StreamRequestType["AckMessage"] = 2] = "AckMessage";
        StreamRequestType[StreamRequestType["RejectMessage"] = 3] = "RejectMessage";
        StreamRequestType[StreamRequestType["ModifyVisibility"] = 4] = "ModifyVisibility";
        StreamRequestType[StreamRequestType["ResendMessage"] = 5] = "ResendMessage";
        StreamRequestType[StreamRequestType["SendModifiedMessage"] = 6] = "SendModifiedMessage";
    })(StreamRequestType = kubemq.StreamRequestType || (kubemq.StreamRequestType = {}));
    var QueuesDownstreamRequestType;
    (function (QueuesDownstreamRequestType) {
        QueuesDownstreamRequestType[QueuesDownstreamRequestType["PollRequestTypeUnknown"] = 0] = "PollRequestTypeUnknown";
        QueuesDownstreamRequestType[QueuesDownstreamRequestType["Get"] = 1] = "Get";
        QueuesDownstreamRequestType[QueuesDownstreamRequestType["AckAll"] = 2] = "AckAll";
        QueuesDownstreamRequestType[QueuesDownstreamRequestType["AckRange"] = 3] = "AckRange";
        QueuesDownstreamRequestType[QueuesDownstreamRequestType["NAckAll"] = 4] = "NAckAll";
        QueuesDownstreamRequestType[QueuesDownstreamRequestType["NAckRange"] = 5] = "NAckRange";
        QueuesDownstreamRequestType[QueuesDownstreamRequestType["ReQueueAll"] = 6] = "ReQueueAll";
        QueuesDownstreamRequestType[QueuesDownstreamRequestType["ReQueueRange"] = 7] = "ReQueueRange";
        QueuesDownstreamRequestType[QueuesDownstreamRequestType["ActiveOffsets"] = 8] = "ActiveOffsets";
        QueuesDownstreamRequestType[QueuesDownstreamRequestType["TransactionStatus"] = 9] = "TransactionStatus";
        QueuesDownstreamRequestType[QueuesDownstreamRequestType["CloseByClient"] = 10] = "CloseByClient";
        QueuesDownstreamRequestType[QueuesDownstreamRequestType["CloseByServer"] = 11] = "CloseByServer";
    })(QueuesDownstreamRequestType = kubemq.QueuesDownstreamRequestType || (kubemq.QueuesDownstreamRequestType = {}));
    var PingResult = /** @class */ (function (_super) {
        __extends(PingResult, _super);
        function PingResult(data) {
            var _this = _super.call(this) || this;
            _PingResult_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _PingResult_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("Host" in data && data.Host != undefined) {
                    _this.Host = data.Host;
                }
                if ("Version" in data && data.Version != undefined) {
                    _this.Version = data.Version;
                }
                if ("ServerStartTime" in data && data.ServerStartTime != undefined) {
                    _this.ServerStartTime = data.ServerStartTime;
                }
                if ("ServerUpTimeSeconds" in data && data.ServerUpTimeSeconds != undefined) {
                    _this.ServerUpTimeSeconds = data.ServerUpTimeSeconds;
                }
            }
            return _this;
        }
        Object.defineProperty(PingResult.prototype, "Host", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PingResult.prototype, "Version", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PingResult.prototype, "ServerStartTime", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PingResult.prototype, "ServerUpTimeSeconds", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        PingResult.fromObject = function (data) {
            var message = new PingResult({});
            if (data.Host != null) {
                message.Host = data.Host;
            }
            if (data.Version != null) {
                message.Version = data.Version;
            }
            if (data.ServerStartTime != null) {
                message.ServerStartTime = data.ServerStartTime;
            }
            if (data.ServerUpTimeSeconds != null) {
                message.ServerUpTimeSeconds = data.ServerUpTimeSeconds;
            }
            return message;
        };
        PingResult.prototype.toObject = function () {
            var data = {};
            if (this.Host != null) {
                data.Host = this.Host;
            }
            if (this.Version != null) {
                data.Version = this.Version;
            }
            if (this.ServerStartTime != null) {
                data.ServerStartTime = this.ServerStartTime;
            }
            if (this.ServerUpTimeSeconds != null) {
                data.ServerUpTimeSeconds = this.ServerUpTimeSeconds;
            }
            return data;
        };
        PingResult.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.Host.length)
                writer.writeString(1, this.Host);
            if (this.Version.length)
                writer.writeString(2, this.Version);
            if (this.ServerStartTime != 0)
                writer.writeInt64(3, this.ServerStartTime);
            if (this.ServerUpTimeSeconds != 0)
                writer.writeInt64(4, this.ServerUpTimeSeconds);
            if (!w)
                return writer.getResultBuffer();
        };
        PingResult.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PingResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.Host = reader.readString();
                        break;
                    case 2:
                        message.Version = reader.readString();
                        break;
                    case 3:
                        message.ServerStartTime = reader.readInt64();
                        break;
                    case 4:
                        message.ServerUpTimeSeconds = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        PingResult.prototype.serializeBinary = function () {
            return this.serialize();
        };
        PingResult.deserializeBinary = function (bytes) {
            return PingResult.deserialize(bytes);
        };
        return PingResult;
    }(pb_1.Message));
    _PingResult_one_of_decls = new WeakMap();
    kubemq.PingResult = PingResult;
    var Empty = /** @class */ (function (_super) {
        __extends(Empty, _super);
        function Empty(data) {
            var _this = _super.call(this) || this;
            _Empty_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _Empty_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") { }
            return _this;
        }
        Empty.fromObject = function (data) {
            var message = new Empty({});
            return message;
        };
        Empty.prototype.toObject = function () {
            var data = {};
            return data;
        };
        Empty.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        };
        Empty.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Empty();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        };
        Empty.prototype.serializeBinary = function () {
            return this.serialize();
        };
        Empty.deserializeBinary = function (bytes) {
            return Empty.deserialize(bytes);
        };
        return Empty;
    }(pb_1.Message));
    _Empty_one_of_decls = new WeakMap();
    kubemq.Empty = Empty;
    var Result = /** @class */ (function (_super) {
        __extends(Result, _super);
        function Result(data) {
            var _this = _super.call(this) || this;
            _Result_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _Result_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("EventID" in data && data.EventID != undefined) {
                    _this.EventID = data.EventID;
                }
                if ("Sent" in data && data.Sent != undefined) {
                    _this.Sent = data.Sent;
                }
                if ("Error" in data && data.Error != undefined) {
                    _this.Error = data.Error;
                }
            }
            return _this;
        }
        Object.defineProperty(Result.prototype, "EventID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Result.prototype, "Sent", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Result.prototype, "Error", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Result.fromObject = function (data) {
            var message = new Result({});
            if (data.EventID != null) {
                message.EventID = data.EventID;
            }
            if (data.Sent != null) {
                message.Sent = data.Sent;
            }
            if (data.Error != null) {
                message.Error = data.Error;
            }
            return message;
        };
        Result.prototype.toObject = function () {
            var data = {};
            if (this.EventID != null) {
                data.EventID = this.EventID;
            }
            if (this.Sent != null) {
                data.Sent = this.Sent;
            }
            if (this.Error != null) {
                data.Error = this.Error;
            }
            return data;
        };
        Result.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.EventID.length)
                writer.writeString(1, this.EventID);
            if (this.Sent != false)
                writer.writeBool(2, this.Sent);
            if (this.Error.length)
                writer.writeString(3, this.Error);
            if (!w)
                return writer.getResultBuffer();
        };
        Result.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Result();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.EventID = reader.readString();
                        break;
                    case 2:
                        message.Sent = reader.readBool();
                        break;
                    case 3:
                        message.Error = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        Result.prototype.serializeBinary = function () {
            return this.serialize();
        };
        Result.deserializeBinary = function (bytes) {
            return Result.deserialize(bytes);
        };
        return Result;
    }(pb_1.Message));
    _Result_one_of_decls = new WeakMap();
    kubemq.Result = Result;
    var Event = /** @class */ (function (_super) {
        __extends(Event, _super);
        function Event(data) {
            var _this = _super.call(this) || this;
            _Event_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _Event_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("EventID" in data && data.EventID != undefined) {
                    _this.EventID = data.EventID;
                }
                if ("ClientID" in data && data.ClientID != undefined) {
                    _this.ClientID = data.ClientID;
                }
                if ("Channel" in data && data.Channel != undefined) {
                    _this.Channel = data.Channel;
                }
                if ("Metadata" in data && data.Metadata != undefined) {
                    _this.Metadata = data.Metadata;
                }
                if ("Body" in data && data.Body != undefined) {
                    _this.Body = data.Body;
                }
                if ("Store" in data && data.Store != undefined) {
                    _this.Store = data.Store;
                }
                if ("Tags" in data && data.Tags != undefined) {
                    _this.Tags = data.Tags;
                }
            }
            if (!_this.Tags)
                _this.Tags = new Map();
            return _this;
        }
        Object.defineProperty(Event.prototype, "EventID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Event.prototype, "ClientID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Event.prototype, "Channel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Event.prototype, "Metadata", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Event.prototype, "Body", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, new Uint8Array(0));
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Event.prototype, "Store", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Event.prototype, "Tags", {
            get: function () {
                return pb_1.Message.getField(this, 7);
            },
            set: function (value) {
                pb_1.Message.setField(this, 7, value);
            },
            enumerable: false,
            configurable: true
        });
        Event.fromObject = function (data) {
            var message = new Event({});
            if (data.EventID != null) {
                message.EventID = data.EventID;
            }
            if (data.ClientID != null) {
                message.ClientID = data.ClientID;
            }
            if (data.Channel != null) {
                message.Channel = data.Channel;
            }
            if (data.Metadata != null) {
                message.Metadata = data.Metadata;
            }
            if (data.Body != null) {
                message.Body = data.Body;
            }
            if (data.Store != null) {
                message.Store = data.Store;
            }
            if (typeof data.Tags == "object") {
                message.Tags = new Map(Object.entries(data.Tags));
            }
            return message;
        };
        Event.prototype.toObject = function () {
            var data = {};
            if (this.EventID != null) {
                data.EventID = this.EventID;
            }
            if (this.ClientID != null) {
                data.ClientID = this.ClientID;
            }
            if (this.Channel != null) {
                data.Channel = this.Channel;
            }
            if (this.Metadata != null) {
                data.Metadata = this.Metadata;
            }
            if (this.Body != null) {
                data.Body = this.Body;
            }
            if (this.Store != null) {
                data.Store = this.Store;
            }
            if (this.Tags != null) {
                data.Tags = (Object.fromEntries)(this.Tags);
            }
            return data;
        };
        Event.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.EventID.length)
                writer.writeString(1, this.EventID);
            if (this.ClientID.length)
                writer.writeString(2, this.ClientID);
            if (this.Channel.length)
                writer.writeString(3, this.Channel);
            if (this.Metadata.length)
                writer.writeString(4, this.Metadata);
            if (this.Body.length)
                writer.writeBytes(5, this.Body);
            if (this.Store != false)
                writer.writeBool(6, this.Store);
            var _loop_1 = function (key, value) {
                writer.writeMessage(7, this_1.Tags, function () {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            };
            var this_1 = this;
            for (var _i = 0, _a = this.Tags; _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                _loop_1(key, value);
            }
            if (!w)
                return writer.getResultBuffer();
        };
        Event.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Event();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.EventID = reader.readString();
                        break;
                    case 2:
                        message.ClientID = reader.readString();
                        break;
                    case 3:
                        message.Channel = reader.readString();
                        break;
                    case 4:
                        message.Metadata = reader.readString();
                        break;
                    case 5:
                        message.Body = reader.readBytes();
                        break;
                    case 6:
                        message.Store = reader.readBool();
                        break;
                    case 7:
                        reader.readMessage(message, function () { return pb_1.Map.deserializeBinary(message.Tags, reader, reader.readString, reader.readString); });
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        Event.prototype.serializeBinary = function () {
            return this.serialize();
        };
        Event.deserializeBinary = function (bytes) {
            return Event.deserialize(bytes);
        };
        return Event;
    }(pb_1.Message));
    _Event_one_of_decls = new WeakMap();
    kubemq.Event = Event;
    var EventReceive = /** @class */ (function (_super) {
        __extends(EventReceive, _super);
        function EventReceive(data) {
            var _this = _super.call(this) || this;
            _EventReceive_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _EventReceive_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("EventID" in data && data.EventID != undefined) {
                    _this.EventID = data.EventID;
                }
                if ("Channel" in data && data.Channel != undefined) {
                    _this.Channel = data.Channel;
                }
                if ("Metadata" in data && data.Metadata != undefined) {
                    _this.Metadata = data.Metadata;
                }
                if ("Body" in data && data.Body != undefined) {
                    _this.Body = data.Body;
                }
                if ("Timestamp" in data && data.Timestamp != undefined) {
                    _this.Timestamp = data.Timestamp;
                }
                if ("Sequence" in data && data.Sequence != undefined) {
                    _this.Sequence = data.Sequence;
                }
                if ("Tags" in data && data.Tags != undefined) {
                    _this.Tags = data.Tags;
                }
            }
            if (!_this.Tags)
                _this.Tags = new Map();
            return _this;
        }
        Object.defineProperty(EventReceive.prototype, "EventID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventReceive.prototype, "Channel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventReceive.prototype, "Metadata", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventReceive.prototype, "Body", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, new Uint8Array(0));
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventReceive.prototype, "Timestamp", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventReceive.prototype, "Sequence", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventReceive.prototype, "Tags", {
            get: function () {
                return pb_1.Message.getField(this, 7);
            },
            set: function (value) {
                pb_1.Message.setField(this, 7, value);
            },
            enumerable: false,
            configurable: true
        });
        EventReceive.fromObject = function (data) {
            var message = new EventReceive({});
            if (data.EventID != null) {
                message.EventID = data.EventID;
            }
            if (data.Channel != null) {
                message.Channel = data.Channel;
            }
            if (data.Metadata != null) {
                message.Metadata = data.Metadata;
            }
            if (data.Body != null) {
                message.Body = data.Body;
            }
            if (data.Timestamp != null) {
                message.Timestamp = data.Timestamp;
            }
            if (data.Sequence != null) {
                message.Sequence = data.Sequence;
            }
            if (typeof data.Tags == "object") {
                message.Tags = new Map(Object.entries(data.Tags));
            }
            return message;
        };
        EventReceive.prototype.toObject = function () {
            var data = {};
            if (this.EventID != null) {
                data.EventID = this.EventID;
            }
            if (this.Channel != null) {
                data.Channel = this.Channel;
            }
            if (this.Metadata != null) {
                data.Metadata = this.Metadata;
            }
            if (this.Body != null) {
                data.Body = this.Body;
            }
            if (this.Timestamp != null) {
                data.Timestamp = this.Timestamp;
            }
            if (this.Sequence != null) {
                data.Sequence = this.Sequence;
            }
            if (this.Tags != null) {
                data.Tags = (Object.fromEntries)(this.Tags);
            }
            return data;
        };
        EventReceive.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.EventID.length)
                writer.writeString(1, this.EventID);
            if (this.Channel.length)
                writer.writeString(2, this.Channel);
            if (this.Metadata.length)
                writer.writeString(3, this.Metadata);
            if (this.Body.length)
                writer.writeBytes(4, this.Body);
            if (this.Timestamp != 0)
                writer.writeInt64(5, this.Timestamp);
            if (this.Sequence != 0)
                writer.writeUint64(6, this.Sequence);
            var _loop_2 = function (key, value) {
                writer.writeMessage(7, this_2.Tags, function () {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            };
            var this_2 = this;
            for (var _i = 0, _a = this.Tags; _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                _loop_2(key, value);
            }
            if (!w)
                return writer.getResultBuffer();
        };
        EventReceive.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EventReceive();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.EventID = reader.readString();
                        break;
                    case 2:
                        message.Channel = reader.readString();
                        break;
                    case 3:
                        message.Metadata = reader.readString();
                        break;
                    case 4:
                        message.Body = reader.readBytes();
                        break;
                    case 5:
                        message.Timestamp = reader.readInt64();
                        break;
                    case 6:
                        message.Sequence = reader.readUint64();
                        break;
                    case 7:
                        reader.readMessage(message, function () { return pb_1.Map.deserializeBinary(message.Tags, reader, reader.readString, reader.readString); });
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        EventReceive.prototype.serializeBinary = function () {
            return this.serialize();
        };
        EventReceive.deserializeBinary = function (bytes) {
            return EventReceive.deserialize(bytes);
        };
        return EventReceive;
    }(pb_1.Message));
    _EventReceive_one_of_decls = new WeakMap();
    kubemq.EventReceive = EventReceive;
    var Subscribe = /** @class */ (function (_super) {
        __extends(Subscribe, _super);
        function Subscribe(data) {
            var _this = _super.call(this) || this;
            _Subscribe_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _Subscribe_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("SubscribeTypeData" in data && data.SubscribeTypeData != undefined) {
                    _this.SubscribeTypeData = data.SubscribeTypeData;
                }
                if ("ClientID" in data && data.ClientID != undefined) {
                    _this.ClientID = data.ClientID;
                }
                if ("Channel" in data && data.Channel != undefined) {
                    _this.Channel = data.Channel;
                }
                if ("Group" in data && data.Group != undefined) {
                    _this.Group = data.Group;
                }
                if ("EventsStoreTypeData" in data && data.EventsStoreTypeData != undefined) {
                    _this.EventsStoreTypeData = data.EventsStoreTypeData;
                }
                if ("EventsStoreTypeValue" in data && data.EventsStoreTypeValue != undefined) {
                    _this.EventsStoreTypeValue = data.EventsStoreTypeValue;
                }
            }
            return _this;
        }
        Object.defineProperty(Subscribe.prototype, "SubscribeTypeData", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, Subscribe.SubscribeType.SubscribeTypeUndefined);
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Subscribe.prototype, "ClientID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Subscribe.prototype, "Channel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Subscribe.prototype, "Group", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Subscribe.prototype, "EventsStoreTypeData", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, Subscribe.EventsStoreType.EventsStoreTypeUndefined);
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Subscribe.prototype, "EventsStoreTypeValue", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Subscribe.fromObject = function (data) {
            var message = new Subscribe({});
            if (data.SubscribeTypeData != null) {
                message.SubscribeTypeData = data.SubscribeTypeData;
            }
            if (data.ClientID != null) {
                message.ClientID = data.ClientID;
            }
            if (data.Channel != null) {
                message.Channel = data.Channel;
            }
            if (data.Group != null) {
                message.Group = data.Group;
            }
            if (data.EventsStoreTypeData != null) {
                message.EventsStoreTypeData = data.EventsStoreTypeData;
            }
            if (data.EventsStoreTypeValue != null) {
                message.EventsStoreTypeValue = data.EventsStoreTypeValue;
            }
            return message;
        };
        Subscribe.prototype.toObject = function () {
            var data = {};
            if (this.SubscribeTypeData != null) {
                data.SubscribeTypeData = this.SubscribeTypeData;
            }
            if (this.ClientID != null) {
                data.ClientID = this.ClientID;
            }
            if (this.Channel != null) {
                data.Channel = this.Channel;
            }
            if (this.Group != null) {
                data.Group = this.Group;
            }
            if (this.EventsStoreTypeData != null) {
                data.EventsStoreTypeData = this.EventsStoreTypeData;
            }
            if (this.EventsStoreTypeValue != null) {
                data.EventsStoreTypeValue = this.EventsStoreTypeValue;
            }
            return data;
        };
        Subscribe.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.SubscribeTypeData != Subscribe.SubscribeType.SubscribeTypeUndefined)
                writer.writeEnum(1, this.SubscribeTypeData);
            if (this.ClientID.length)
                writer.writeString(2, this.ClientID);
            if (this.Channel.length)
                writer.writeString(3, this.Channel);
            if (this.Group.length)
                writer.writeString(4, this.Group);
            if (this.EventsStoreTypeData != Subscribe.EventsStoreType.EventsStoreTypeUndefined)
                writer.writeEnum(5, this.EventsStoreTypeData);
            if (this.EventsStoreTypeValue != 0)
                writer.writeInt64(6, this.EventsStoreTypeValue);
            if (!w)
                return writer.getResultBuffer();
        };
        Subscribe.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Subscribe();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.SubscribeTypeData = reader.readEnum();
                        break;
                    case 2:
                        message.ClientID = reader.readString();
                        break;
                    case 3:
                        message.Channel = reader.readString();
                        break;
                    case 4:
                        message.Group = reader.readString();
                        break;
                    case 5:
                        message.EventsStoreTypeData = reader.readEnum();
                        break;
                    case 6:
                        message.EventsStoreTypeValue = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        Subscribe.prototype.serializeBinary = function () {
            return this.serialize();
        };
        Subscribe.deserializeBinary = function (bytes) {
            return Subscribe.deserialize(bytes);
        };
        return Subscribe;
    }(pb_1.Message));
    _Subscribe_one_of_decls = new WeakMap();
    kubemq.Subscribe = Subscribe;
    (function (Subscribe) {
        var SubscribeType;
        (function (SubscribeType) {
            SubscribeType[SubscribeType["SubscribeTypeUndefined"] = 0] = "SubscribeTypeUndefined";
            SubscribeType[SubscribeType["Events"] = 1] = "Events";
            SubscribeType[SubscribeType["EventsStore"] = 2] = "EventsStore";
            SubscribeType[SubscribeType["Commands"] = 3] = "Commands";
            SubscribeType[SubscribeType["Queries"] = 4] = "Queries";
        })(SubscribeType = Subscribe.SubscribeType || (Subscribe.SubscribeType = {}));
        var EventsStoreType;
        (function (EventsStoreType) {
            EventsStoreType[EventsStoreType["EventsStoreTypeUndefined"] = 0] = "EventsStoreTypeUndefined";
            EventsStoreType[EventsStoreType["StartNewOnly"] = 1] = "StartNewOnly";
            EventsStoreType[EventsStoreType["StartFromFirst"] = 2] = "StartFromFirst";
            EventsStoreType[EventsStoreType["StartFromLast"] = 3] = "StartFromLast";
            EventsStoreType[EventsStoreType["StartAtSequence"] = 4] = "StartAtSequence";
            EventsStoreType[EventsStoreType["StartAtTime"] = 5] = "StartAtTime";
            EventsStoreType[EventsStoreType["StartAtTimeDelta"] = 6] = "StartAtTimeDelta";
        })(EventsStoreType = Subscribe.EventsStoreType || (Subscribe.EventsStoreType = {}));
    })(Subscribe = kubemq.Subscribe || (kubemq.Subscribe = {}));
    var Request = /** @class */ (function (_super) {
        __extends(Request, _super);
        function Request(data) {
            var _this = _super.call(this) || this;
            _Request_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _Request_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("RequestID" in data && data.RequestID != undefined) {
                    _this.RequestID = data.RequestID;
                }
                if ("RequestTypeData" in data && data.RequestTypeData != undefined) {
                    _this.RequestTypeData = data.RequestTypeData;
                }
                if ("ClientID" in data && data.ClientID != undefined) {
                    _this.ClientID = data.ClientID;
                }
                if ("Channel" in data && data.Channel != undefined) {
                    _this.Channel = data.Channel;
                }
                if ("Metadata" in data && data.Metadata != undefined) {
                    _this.Metadata = data.Metadata;
                }
                if ("Body" in data && data.Body != undefined) {
                    _this.Body = data.Body;
                }
                if ("ReplyChannel" in data && data.ReplyChannel != undefined) {
                    _this.ReplyChannel = data.ReplyChannel;
                }
                if ("Timeout" in data && data.Timeout != undefined) {
                    _this.Timeout = data.Timeout;
                }
                if ("CacheKey" in data && data.CacheKey != undefined) {
                    _this.CacheKey = data.CacheKey;
                }
                if ("CacheTTL" in data && data.CacheTTL != undefined) {
                    _this.CacheTTL = data.CacheTTL;
                }
                if ("Span" in data && data.Span != undefined) {
                    _this.Span = data.Span;
                }
                if ("Tags" in data && data.Tags != undefined) {
                    _this.Tags = data.Tags;
                }
            }
            if (!_this.Tags)
                _this.Tags = new Map();
            return _this;
        }
        Object.defineProperty(Request.prototype, "RequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Request.prototype, "RequestTypeData", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, Request.RequestType.RequestTypeUnknown);
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Request.prototype, "ClientID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Request.prototype, "Channel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Request.prototype, "Metadata", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Request.prototype, "Body", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, new Uint8Array(0));
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Request.prototype, "ReplyChannel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 7, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 7, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Request.prototype, "Timeout", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 8, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 8, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Request.prototype, "CacheKey", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 9, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 9, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Request.prototype, "CacheTTL", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 10, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 10, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Request.prototype, "Span", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 11, new Uint8Array(0));
            },
            set: function (value) {
                pb_1.Message.setField(this, 11, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Request.prototype, "Tags", {
            get: function () {
                return pb_1.Message.getField(this, 12);
            },
            set: function (value) {
                pb_1.Message.setField(this, 12, value);
            },
            enumerable: false,
            configurable: true
        });
        Request.fromObject = function (data) {
            var message = new Request({});
            if (data.RequestID != null) {
                message.RequestID = data.RequestID;
            }
            if (data.RequestTypeData != null) {
                message.RequestTypeData = data.RequestTypeData;
            }
            if (data.ClientID != null) {
                message.ClientID = data.ClientID;
            }
            if (data.Channel != null) {
                message.Channel = data.Channel;
            }
            if (data.Metadata != null) {
                message.Metadata = data.Metadata;
            }
            if (data.Body != null) {
                message.Body = data.Body;
            }
            if (data.ReplyChannel != null) {
                message.ReplyChannel = data.ReplyChannel;
            }
            if (data.Timeout != null) {
                message.Timeout = data.Timeout;
            }
            if (data.CacheKey != null) {
                message.CacheKey = data.CacheKey;
            }
            if (data.CacheTTL != null) {
                message.CacheTTL = data.CacheTTL;
            }
            if (data.Span != null) {
                message.Span = data.Span;
            }
            if (typeof data.Tags == "object") {
                message.Tags = new Map(Object.entries(data.Tags));
            }
            return message;
        };
        Request.prototype.toObject = function () {
            var data = {};
            if (this.RequestID != null) {
                data.RequestID = this.RequestID;
            }
            if (this.RequestTypeData != null) {
                data.RequestTypeData = this.RequestTypeData;
            }
            if (this.ClientID != null) {
                data.ClientID = this.ClientID;
            }
            if (this.Channel != null) {
                data.Channel = this.Channel;
            }
            if (this.Metadata != null) {
                data.Metadata = this.Metadata;
            }
            if (this.Body != null) {
                data.Body = this.Body;
            }
            if (this.ReplyChannel != null) {
                data.ReplyChannel = this.ReplyChannel;
            }
            if (this.Timeout != null) {
                data.Timeout = this.Timeout;
            }
            if (this.CacheKey != null) {
                data.CacheKey = this.CacheKey;
            }
            if (this.CacheTTL != null) {
                data.CacheTTL = this.CacheTTL;
            }
            if (this.Span != null) {
                data.Span = this.Span;
            }
            if (this.Tags != null) {
                data.Tags = (Object.fromEntries)(this.Tags);
            }
            return data;
        };
        Request.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.RequestID.length)
                writer.writeString(1, this.RequestID);
            if (this.RequestTypeData != Request.RequestType.RequestTypeUnknown)
                writer.writeEnum(2, this.RequestTypeData);
            if (this.ClientID.length)
                writer.writeString(3, this.ClientID);
            if (this.Channel.length)
                writer.writeString(4, this.Channel);
            if (this.Metadata.length)
                writer.writeString(5, this.Metadata);
            if (this.Body.length)
                writer.writeBytes(6, this.Body);
            if (this.ReplyChannel.length)
                writer.writeString(7, this.ReplyChannel);
            if (this.Timeout != 0)
                writer.writeInt32(8, this.Timeout);
            if (this.CacheKey.length)
                writer.writeString(9, this.CacheKey);
            if (this.CacheTTL != 0)
                writer.writeInt32(10, this.CacheTTL);
            if (this.Span.length)
                writer.writeBytes(11, this.Span);
            var _loop_3 = function (key, value) {
                writer.writeMessage(12, this_3.Tags, function () {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            };
            var this_3 = this;
            for (var _i = 0, _a = this.Tags; _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                _loop_3(key, value);
            }
            if (!w)
                return writer.getResultBuffer();
        };
        Request.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Request();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.RequestID = reader.readString();
                        break;
                    case 2:
                        message.RequestTypeData = reader.readEnum();
                        break;
                    case 3:
                        message.ClientID = reader.readString();
                        break;
                    case 4:
                        message.Channel = reader.readString();
                        break;
                    case 5:
                        message.Metadata = reader.readString();
                        break;
                    case 6:
                        message.Body = reader.readBytes();
                        break;
                    case 7:
                        message.ReplyChannel = reader.readString();
                        break;
                    case 8:
                        message.Timeout = reader.readInt32();
                        break;
                    case 9:
                        message.CacheKey = reader.readString();
                        break;
                    case 10:
                        message.CacheTTL = reader.readInt32();
                        break;
                    case 11:
                        message.Span = reader.readBytes();
                        break;
                    case 12:
                        reader.readMessage(message, function () { return pb_1.Map.deserializeBinary(message.Tags, reader, reader.readString, reader.readString); });
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        Request.prototype.serializeBinary = function () {
            return this.serialize();
        };
        Request.deserializeBinary = function (bytes) {
            return Request.deserialize(bytes);
        };
        return Request;
    }(pb_1.Message));
    _Request_one_of_decls = new WeakMap();
    kubemq.Request = Request;
    (function (Request) {
        var RequestType;
        (function (RequestType) {
            RequestType[RequestType["RequestTypeUnknown"] = 0] = "RequestTypeUnknown";
            RequestType[RequestType["Command"] = 1] = "Command";
            RequestType[RequestType["Query"] = 2] = "Query";
        })(RequestType = Request.RequestType || (Request.RequestType = {}));
    })(Request = kubemq.Request || (kubemq.Request = {}));
    var Response = /** @class */ (function (_super) {
        __extends(Response, _super);
        function Response(data) {
            var _this = _super.call(this) || this;
            _Response_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _Response_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("ClientID" in data && data.ClientID != undefined) {
                    _this.ClientID = data.ClientID;
                }
                if ("RequestID" in data && data.RequestID != undefined) {
                    _this.RequestID = data.RequestID;
                }
                if ("ReplyChannel" in data && data.ReplyChannel != undefined) {
                    _this.ReplyChannel = data.ReplyChannel;
                }
                if ("Metadata" in data && data.Metadata != undefined) {
                    _this.Metadata = data.Metadata;
                }
                if ("Body" in data && data.Body != undefined) {
                    _this.Body = data.Body;
                }
                if ("CacheHit" in data && data.CacheHit != undefined) {
                    _this.CacheHit = data.CacheHit;
                }
                if ("Timestamp" in data && data.Timestamp != undefined) {
                    _this.Timestamp = data.Timestamp;
                }
                if ("Executed" in data && data.Executed != undefined) {
                    _this.Executed = data.Executed;
                }
                if ("Error" in data && data.Error != undefined) {
                    _this.Error = data.Error;
                }
                if ("Span" in data && data.Span != undefined) {
                    _this.Span = data.Span;
                }
                if ("Tags" in data && data.Tags != undefined) {
                    _this.Tags = data.Tags;
                }
            }
            if (!_this.Tags)
                _this.Tags = new Map();
            return _this;
        }
        Object.defineProperty(Response.prototype, "ClientID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Response.prototype, "RequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Response.prototype, "ReplyChannel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Response.prototype, "Metadata", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Response.prototype, "Body", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, new Uint8Array(0));
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Response.prototype, "CacheHit", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Response.prototype, "Timestamp", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 7, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 7, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Response.prototype, "Executed", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 8, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 8, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Response.prototype, "Error", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 9, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 9, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Response.prototype, "Span", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 10, new Uint8Array(0));
            },
            set: function (value) {
                pb_1.Message.setField(this, 10, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Response.prototype, "Tags", {
            get: function () {
                return pb_1.Message.getField(this, 11);
            },
            set: function (value) {
                pb_1.Message.setField(this, 11, value);
            },
            enumerable: false,
            configurable: true
        });
        Response.fromObject = function (data) {
            var message = new Response({});
            if (data.ClientID != null) {
                message.ClientID = data.ClientID;
            }
            if (data.RequestID != null) {
                message.RequestID = data.RequestID;
            }
            if (data.ReplyChannel != null) {
                message.ReplyChannel = data.ReplyChannel;
            }
            if (data.Metadata != null) {
                message.Metadata = data.Metadata;
            }
            if (data.Body != null) {
                message.Body = data.Body;
            }
            if (data.CacheHit != null) {
                message.CacheHit = data.CacheHit;
            }
            if (data.Timestamp != null) {
                message.Timestamp = data.Timestamp;
            }
            if (data.Executed != null) {
                message.Executed = data.Executed;
            }
            if (data.Error != null) {
                message.Error = data.Error;
            }
            if (data.Span != null) {
                message.Span = data.Span;
            }
            if (typeof data.Tags == "object") {
                message.Tags = new Map(Object.entries(data.Tags));
            }
            return message;
        };
        Response.prototype.toObject = function () {
            var data = {};
            if (this.ClientID != null) {
                data.ClientID = this.ClientID;
            }
            if (this.RequestID != null) {
                data.RequestID = this.RequestID;
            }
            if (this.ReplyChannel != null) {
                data.ReplyChannel = this.ReplyChannel;
            }
            if (this.Metadata != null) {
                data.Metadata = this.Metadata;
            }
            if (this.Body != null) {
                data.Body = this.Body;
            }
            if (this.CacheHit != null) {
                data.CacheHit = this.CacheHit;
            }
            if (this.Timestamp != null) {
                data.Timestamp = this.Timestamp;
            }
            if (this.Executed != null) {
                data.Executed = this.Executed;
            }
            if (this.Error != null) {
                data.Error = this.Error;
            }
            if (this.Span != null) {
                data.Span = this.Span;
            }
            if (this.Tags != null) {
                data.Tags = (Object.fromEntries)(this.Tags);
            }
            return data;
        };
        Response.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.ClientID.length)
                writer.writeString(1, this.ClientID);
            if (this.RequestID.length)
                writer.writeString(2, this.RequestID);
            if (this.ReplyChannel.length)
                writer.writeString(3, this.ReplyChannel);
            if (this.Metadata.length)
                writer.writeString(4, this.Metadata);
            if (this.Body.length)
                writer.writeBytes(5, this.Body);
            if (this.CacheHit != false)
                writer.writeBool(6, this.CacheHit);
            if (this.Timestamp != 0)
                writer.writeInt64(7, this.Timestamp);
            if (this.Executed != false)
                writer.writeBool(8, this.Executed);
            if (this.Error.length)
                writer.writeString(9, this.Error);
            if (this.Span.length)
                writer.writeBytes(10, this.Span);
            var _loop_4 = function (key, value) {
                writer.writeMessage(11, this_4.Tags, function () {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            };
            var this_4 = this;
            for (var _i = 0, _a = this.Tags; _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                _loop_4(key, value);
            }
            if (!w)
                return writer.getResultBuffer();
        };
        Response.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Response();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.ClientID = reader.readString();
                        break;
                    case 2:
                        message.RequestID = reader.readString();
                        break;
                    case 3:
                        message.ReplyChannel = reader.readString();
                        break;
                    case 4:
                        message.Metadata = reader.readString();
                        break;
                    case 5:
                        message.Body = reader.readBytes();
                        break;
                    case 6:
                        message.CacheHit = reader.readBool();
                        break;
                    case 7:
                        message.Timestamp = reader.readInt64();
                        break;
                    case 8:
                        message.Executed = reader.readBool();
                        break;
                    case 9:
                        message.Error = reader.readString();
                        break;
                    case 10:
                        message.Span = reader.readBytes();
                        break;
                    case 11:
                        reader.readMessage(message, function () { return pb_1.Map.deserializeBinary(message.Tags, reader, reader.readString, reader.readString); });
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        Response.prototype.serializeBinary = function () {
            return this.serialize();
        };
        Response.deserializeBinary = function (bytes) {
            return Response.deserialize(bytes);
        };
        return Response;
    }(pb_1.Message));
    _Response_one_of_decls = new WeakMap();
    kubemq.Response = Response;
    var QueueMessage = /** @class */ (function (_super) {
        __extends(QueueMessage, _super);
        function QueueMessage(data) {
            var _this = _super.call(this) || this;
            _QueueMessage_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _QueueMessage_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("MessageID" in data && data.MessageID != undefined) {
                    _this.MessageID = data.MessageID;
                }
                if ("ClientID" in data && data.ClientID != undefined) {
                    _this.ClientID = data.ClientID;
                }
                if ("Channel" in data && data.Channel != undefined) {
                    _this.Channel = data.Channel;
                }
                if ("Metadata" in data && data.Metadata != undefined) {
                    _this.Metadata = data.Metadata;
                }
                if ("Body" in data && data.Body != undefined) {
                    _this.Body = data.Body;
                }
                if ("Tags" in data && data.Tags != undefined) {
                    _this.Tags = data.Tags;
                }
                if ("Attributes" in data && data.Attributes != undefined) {
                    _this.Attributes = data.Attributes;
                }
                if ("Policy" in data && data.Policy != undefined) {
                    _this.Policy = data.Policy;
                }
                if ("Topic" in data && data.Topic != undefined) {
                    _this.Topic = data.Topic;
                }
                if ("Partition" in data && data.Partition != undefined) {
                    _this.Partition = data.Partition;
                }
                if ("PartitionKey" in data && data.PartitionKey != undefined) {
                    _this.PartitionKey = data.PartitionKey;
                }
            }
            if (!_this.Tags)
                _this.Tags = new Map();
            return _this;
        }
        Object.defineProperty(QueueMessage.prototype, "MessageID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessage.prototype, "ClientID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessage.prototype, "Channel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessage.prototype, "Metadata", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessage.prototype, "Body", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, new Uint8Array(0));
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessage.prototype, "Tags", {
            get: function () {
                return pb_1.Message.getField(this, 6);
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessage.prototype, "Attributes", {
            get: function () {
                return pb_1.Message.getWrapperField(this, QueueMessageAttributes, 7);
            },
            set: function (value) {
                pb_1.Message.setWrapperField(this, 7, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessage.prototype, "has_Attributes", {
            get: function () {
                return pb_1.Message.getField(this, 7) != null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessage.prototype, "Policy", {
            get: function () {
                return pb_1.Message.getWrapperField(this, QueueMessagePolicy, 8);
            },
            set: function (value) {
                pb_1.Message.setWrapperField(this, 8, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessage.prototype, "has_Policy", {
            get: function () {
                return pb_1.Message.getField(this, 8) != null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessage.prototype, "Topic", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 9, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 9, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessage.prototype, "Partition", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 10, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 10, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessage.prototype, "PartitionKey", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 11, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 11, value);
            },
            enumerable: false,
            configurable: true
        });
        QueueMessage.fromObject = function (data) {
            var message = new QueueMessage({});
            if (data.MessageID != null) {
                message.MessageID = data.MessageID;
            }
            if (data.ClientID != null) {
                message.ClientID = data.ClientID;
            }
            if (data.Channel != null) {
                message.Channel = data.Channel;
            }
            if (data.Metadata != null) {
                message.Metadata = data.Metadata;
            }
            if (data.Body != null) {
                message.Body = data.Body;
            }
            if (typeof data.Tags == "object") {
                message.Tags = new Map(Object.entries(data.Tags));
            }
            if (data.Attributes != null) {
                message.Attributes = QueueMessageAttributes.fromObject(data.Attributes);
            }
            if (data.Policy != null) {
                message.Policy = QueueMessagePolicy.fromObject(data.Policy);
            }
            if (data.Topic != null) {
                message.Topic = data.Topic;
            }
            if (data.Partition != null) {
                message.Partition = data.Partition;
            }
            if (data.PartitionKey != null) {
                message.PartitionKey = data.PartitionKey;
            }
            return message;
        };
        QueueMessage.prototype.toObject = function () {
            var data = {};
            if (this.MessageID != null) {
                data.MessageID = this.MessageID;
            }
            if (this.ClientID != null) {
                data.ClientID = this.ClientID;
            }
            if (this.Channel != null) {
                data.Channel = this.Channel;
            }
            if (this.Metadata != null) {
                data.Metadata = this.Metadata;
            }
            if (this.Body != null) {
                data.Body = this.Body;
            }
            if (this.Tags != null) {
                data.Tags = (Object.fromEntries)(this.Tags);
            }
            if (this.Attributes != null) {
                data.Attributes = this.Attributes.toObject();
            }
            if (this.Policy != null) {
                data.Policy = this.Policy.toObject();
            }
            if (this.Topic != null) {
                data.Topic = this.Topic;
            }
            if (this.Partition != null) {
                data.Partition = this.Partition;
            }
            if (this.PartitionKey != null) {
                data.PartitionKey = this.PartitionKey;
            }
            return data;
        };
        QueueMessage.prototype.serialize = function (w) {
            var _this = this;
            var writer = w || new pb_1.BinaryWriter();
            if (this.MessageID.length)
                writer.writeString(1, this.MessageID);
            if (this.ClientID.length)
                writer.writeString(2, this.ClientID);
            if (this.Channel.length)
                writer.writeString(3, this.Channel);
            if (this.Metadata.length)
                writer.writeString(4, this.Metadata);
            if (this.Body.length)
                writer.writeBytes(5, this.Body);
            var _loop_5 = function (key, value) {
                writer.writeMessage(6, this_5.Tags, function () {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            };
            var this_5 = this;
            for (var _i = 0, _a = this.Tags; _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                _loop_5(key, value);
            }
            if (this.has_Attributes)
                writer.writeMessage(7, this.Attributes, function () { return _this.Attributes.serialize(writer); });
            if (this.has_Policy)
                writer.writeMessage(8, this.Policy, function () { return _this.Policy.serialize(writer); });
            if (this.Topic.length)
                writer.writeString(9, this.Topic);
            if (this.Partition != 0)
                writer.writeInt32(10, this.Partition);
            if (this.PartitionKey.length)
                writer.writeString(11, this.PartitionKey);
            if (!w)
                return writer.getResultBuffer();
        };
        QueueMessage.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueueMessage();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.MessageID = reader.readString();
                        break;
                    case 2:
                        message.ClientID = reader.readString();
                        break;
                    case 3:
                        message.Channel = reader.readString();
                        break;
                    case 4:
                        message.Metadata = reader.readString();
                        break;
                    case 5:
                        message.Body = reader.readBytes();
                        break;
                    case 6:
                        reader.readMessage(message, function () { return pb_1.Map.deserializeBinary(message.Tags, reader, reader.readString, reader.readString); });
                        break;
                    case 7:
                        reader.readMessage(message.Attributes, function () { return message.Attributes = QueueMessageAttributes.deserialize(reader); });
                        break;
                    case 8:
                        reader.readMessage(message.Policy, function () { return message.Policy = QueueMessagePolicy.deserialize(reader); });
                        break;
                    case 9:
                        message.Topic = reader.readString();
                        break;
                    case 10:
                        message.Partition = reader.readInt32();
                        break;
                    case 11:
                        message.PartitionKey = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueueMessage.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueueMessage.deserializeBinary = function (bytes) {
            return QueueMessage.deserialize(bytes);
        };
        return QueueMessage;
    }(pb_1.Message));
    _QueueMessage_one_of_decls = new WeakMap();
    kubemq.QueueMessage = QueueMessage;
    var QueueMessagesBatchRequest = /** @class */ (function (_super) {
        __extends(QueueMessagesBatchRequest, _super);
        function QueueMessagesBatchRequest(data) {
            var _this = _super.call(this) || this;
            _QueueMessagesBatchRequest_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [2], __classPrivateFieldGet(_this, _QueueMessagesBatchRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("BatchID" in data && data.BatchID != undefined) {
                    _this.BatchID = data.BatchID;
                }
                if ("Messages" in data && data.Messages != undefined) {
                    _this.Messages = data.Messages;
                }
            }
            return _this;
        }
        Object.defineProperty(QueueMessagesBatchRequest.prototype, "BatchID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessagesBatchRequest.prototype, "Messages", {
            get: function () {
                return pb_1.Message.getRepeatedWrapperField(this, QueueMessage, 2);
            },
            set: function (value) {
                pb_1.Message.setRepeatedWrapperField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        QueueMessagesBatchRequest.fromObject = function (data) {
            var message = new QueueMessagesBatchRequest({});
            if (data.BatchID != null) {
                message.BatchID = data.BatchID;
            }
            if (data.Messages != null) {
                message.Messages = data.Messages.map(function (item) { return QueueMessage.fromObject(item); });
            }
            return message;
        };
        QueueMessagesBatchRequest.prototype.toObject = function () {
            var data = {};
            if (this.BatchID != null) {
                data.BatchID = this.BatchID;
            }
            if (this.Messages != null) {
                data.Messages = this.Messages.map(function (item) { return item.toObject(); });
            }
            return data;
        };
        QueueMessagesBatchRequest.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.BatchID.length)
                writer.writeString(1, this.BatchID);
            if (this.Messages.length)
                writer.writeRepeatedMessage(2, this.Messages, function (item) { return item.serialize(writer); });
            if (!w)
                return writer.getResultBuffer();
        };
        QueueMessagesBatchRequest.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueueMessagesBatchRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.BatchID = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.Messages, function () { return pb_1.Message.addToRepeatedWrapperField(message, 2, QueueMessage.deserialize(reader), QueueMessage); });
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueueMessagesBatchRequest.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueueMessagesBatchRequest.deserializeBinary = function (bytes) {
            return QueueMessagesBatchRequest.deserialize(bytes);
        };
        return QueueMessagesBatchRequest;
    }(pb_1.Message));
    _QueueMessagesBatchRequest_one_of_decls = new WeakMap();
    kubemq.QueueMessagesBatchRequest = QueueMessagesBatchRequest;
    var QueueMessagesBatchResponse = /** @class */ (function (_super) {
        __extends(QueueMessagesBatchResponse, _super);
        function QueueMessagesBatchResponse(data) {
            var _this = _super.call(this) || this;
            _QueueMessagesBatchResponse_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [2], __classPrivateFieldGet(_this, _QueueMessagesBatchResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("BatchID" in data && data.BatchID != undefined) {
                    _this.BatchID = data.BatchID;
                }
                if ("Results" in data && data.Results != undefined) {
                    _this.Results = data.Results;
                }
                if ("HaveErrors" in data && data.HaveErrors != undefined) {
                    _this.HaveErrors = data.HaveErrors;
                }
            }
            return _this;
        }
        Object.defineProperty(QueueMessagesBatchResponse.prototype, "BatchID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessagesBatchResponse.prototype, "Results", {
            get: function () {
                return pb_1.Message.getRepeatedWrapperField(this, SendQueueMessageResult, 2);
            },
            set: function (value) {
                pb_1.Message.setRepeatedWrapperField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessagesBatchResponse.prototype, "HaveErrors", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        QueueMessagesBatchResponse.fromObject = function (data) {
            var message = new QueueMessagesBatchResponse({});
            if (data.BatchID != null) {
                message.BatchID = data.BatchID;
            }
            if (data.Results != null) {
                message.Results = data.Results.map(function (item) { return SendQueueMessageResult.fromObject(item); });
            }
            if (data.HaveErrors != null) {
                message.HaveErrors = data.HaveErrors;
            }
            return message;
        };
        QueueMessagesBatchResponse.prototype.toObject = function () {
            var data = {};
            if (this.BatchID != null) {
                data.BatchID = this.BatchID;
            }
            if (this.Results != null) {
                data.Results = this.Results.map(function (item) { return item.toObject(); });
            }
            if (this.HaveErrors != null) {
                data.HaveErrors = this.HaveErrors;
            }
            return data;
        };
        QueueMessagesBatchResponse.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.BatchID.length)
                writer.writeString(1, this.BatchID);
            if (this.Results.length)
                writer.writeRepeatedMessage(2, this.Results, function (item) { return item.serialize(writer); });
            if (this.HaveErrors != false)
                writer.writeBool(3, this.HaveErrors);
            if (!w)
                return writer.getResultBuffer();
        };
        QueueMessagesBatchResponse.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueueMessagesBatchResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.BatchID = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.Results, function () { return pb_1.Message.addToRepeatedWrapperField(message, 2, SendQueueMessageResult.deserialize(reader), SendQueueMessageResult); });
                        break;
                    case 3:
                        message.HaveErrors = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueueMessagesBatchResponse.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueueMessagesBatchResponse.deserializeBinary = function (bytes) {
            return QueueMessagesBatchResponse.deserialize(bytes);
        };
        return QueueMessagesBatchResponse;
    }(pb_1.Message));
    _QueueMessagesBatchResponse_one_of_decls = new WeakMap();
    kubemq.QueueMessagesBatchResponse = QueueMessagesBatchResponse;
    var QueueMessageAttributes = /** @class */ (function (_super) {
        __extends(QueueMessageAttributes, _super);
        function QueueMessageAttributes(data) {
            var _this = _super.call(this) || this;
            _QueueMessageAttributes_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _QueueMessageAttributes_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("Timestamp" in data && data.Timestamp != undefined) {
                    _this.Timestamp = data.Timestamp;
                }
                if ("Sequence" in data && data.Sequence != undefined) {
                    _this.Sequence = data.Sequence;
                }
                if ("MD5OfBody" in data && data.MD5OfBody != undefined) {
                    _this.MD5OfBody = data.MD5OfBody;
                }
                if ("ReceiveCount" in data && data.ReceiveCount != undefined) {
                    _this.ReceiveCount = data.ReceiveCount;
                }
                if ("ReRouted" in data && data.ReRouted != undefined) {
                    _this.ReRouted = data.ReRouted;
                }
                if ("ReRoutedFromQueue" in data && data.ReRoutedFromQueue != undefined) {
                    _this.ReRoutedFromQueue = data.ReRoutedFromQueue;
                }
                if ("ExpirationAt" in data && data.ExpirationAt != undefined) {
                    _this.ExpirationAt = data.ExpirationAt;
                }
                if ("DelayedTo" in data && data.DelayedTo != undefined) {
                    _this.DelayedTo = data.DelayedTo;
                }
            }
            return _this;
        }
        Object.defineProperty(QueueMessageAttributes.prototype, "Timestamp", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessageAttributes.prototype, "Sequence", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessageAttributes.prototype, "MD5OfBody", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessageAttributes.prototype, "ReceiveCount", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessageAttributes.prototype, "ReRouted", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessageAttributes.prototype, "ReRoutedFromQueue", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessageAttributes.prototype, "ExpirationAt", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 7, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 7, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessageAttributes.prototype, "DelayedTo", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 8, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 8, value);
            },
            enumerable: false,
            configurable: true
        });
        QueueMessageAttributes.fromObject = function (data) {
            var message = new QueueMessageAttributes({});
            if (data.Timestamp != null) {
                message.Timestamp = data.Timestamp;
            }
            if (data.Sequence != null) {
                message.Sequence = data.Sequence;
            }
            if (data.MD5OfBody != null) {
                message.MD5OfBody = data.MD5OfBody;
            }
            if (data.ReceiveCount != null) {
                message.ReceiveCount = data.ReceiveCount;
            }
            if (data.ReRouted != null) {
                message.ReRouted = data.ReRouted;
            }
            if (data.ReRoutedFromQueue != null) {
                message.ReRoutedFromQueue = data.ReRoutedFromQueue;
            }
            if (data.ExpirationAt != null) {
                message.ExpirationAt = data.ExpirationAt;
            }
            if (data.DelayedTo != null) {
                message.DelayedTo = data.DelayedTo;
            }
            return message;
        };
        QueueMessageAttributes.prototype.toObject = function () {
            var data = {};
            if (this.Timestamp != null) {
                data.Timestamp = this.Timestamp;
            }
            if (this.Sequence != null) {
                data.Sequence = this.Sequence;
            }
            if (this.MD5OfBody != null) {
                data.MD5OfBody = this.MD5OfBody;
            }
            if (this.ReceiveCount != null) {
                data.ReceiveCount = this.ReceiveCount;
            }
            if (this.ReRouted != null) {
                data.ReRouted = this.ReRouted;
            }
            if (this.ReRoutedFromQueue != null) {
                data.ReRoutedFromQueue = this.ReRoutedFromQueue;
            }
            if (this.ExpirationAt != null) {
                data.ExpirationAt = this.ExpirationAt;
            }
            if (this.DelayedTo != null) {
                data.DelayedTo = this.DelayedTo;
            }
            return data;
        };
        QueueMessageAttributes.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.Timestamp != 0)
                writer.writeInt64(1, this.Timestamp);
            if (this.Sequence != 0)
                writer.writeUint64(2, this.Sequence);
            if (this.MD5OfBody.length)
                writer.writeString(3, this.MD5OfBody);
            if (this.ReceiveCount != 0)
                writer.writeInt32(4, this.ReceiveCount);
            if (this.ReRouted != false)
                writer.writeBool(5, this.ReRouted);
            if (this.ReRoutedFromQueue.length)
                writer.writeString(6, this.ReRoutedFromQueue);
            if (this.ExpirationAt != 0)
                writer.writeInt64(7, this.ExpirationAt);
            if (this.DelayedTo != 0)
                writer.writeInt64(8, this.DelayedTo);
            if (!w)
                return writer.getResultBuffer();
        };
        QueueMessageAttributes.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueueMessageAttributes();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.Timestamp = reader.readInt64();
                        break;
                    case 2:
                        message.Sequence = reader.readUint64();
                        break;
                    case 3:
                        message.MD5OfBody = reader.readString();
                        break;
                    case 4:
                        message.ReceiveCount = reader.readInt32();
                        break;
                    case 5:
                        message.ReRouted = reader.readBool();
                        break;
                    case 6:
                        message.ReRoutedFromQueue = reader.readString();
                        break;
                    case 7:
                        message.ExpirationAt = reader.readInt64();
                        break;
                    case 8:
                        message.DelayedTo = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueueMessageAttributes.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueueMessageAttributes.deserializeBinary = function (bytes) {
            return QueueMessageAttributes.deserialize(bytes);
        };
        return QueueMessageAttributes;
    }(pb_1.Message));
    _QueueMessageAttributes_one_of_decls = new WeakMap();
    kubemq.QueueMessageAttributes = QueueMessageAttributes;
    var QueueMessagePolicy = /** @class */ (function (_super) {
        __extends(QueueMessagePolicy, _super);
        function QueueMessagePolicy(data) {
            var _this = _super.call(this) || this;
            _QueueMessagePolicy_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _QueueMessagePolicy_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("ExpirationSeconds" in data && data.ExpirationSeconds != undefined) {
                    _this.ExpirationSeconds = data.ExpirationSeconds;
                }
                if ("DelaySeconds" in data && data.DelaySeconds != undefined) {
                    _this.DelaySeconds = data.DelaySeconds;
                }
                if ("MaxReceiveCount" in data && data.MaxReceiveCount != undefined) {
                    _this.MaxReceiveCount = data.MaxReceiveCount;
                }
                if ("MaxReceiveQueue" in data && data.MaxReceiveQueue != undefined) {
                    _this.MaxReceiveQueue = data.MaxReceiveQueue;
                }
            }
            return _this;
        }
        Object.defineProperty(QueueMessagePolicy.prototype, "ExpirationSeconds", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessagePolicy.prototype, "DelaySeconds", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessagePolicy.prototype, "MaxReceiveCount", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueMessagePolicy.prototype, "MaxReceiveQueue", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        QueueMessagePolicy.fromObject = function (data) {
            var message = new QueueMessagePolicy({});
            if (data.ExpirationSeconds != null) {
                message.ExpirationSeconds = data.ExpirationSeconds;
            }
            if (data.DelaySeconds != null) {
                message.DelaySeconds = data.DelaySeconds;
            }
            if (data.MaxReceiveCount != null) {
                message.MaxReceiveCount = data.MaxReceiveCount;
            }
            if (data.MaxReceiveQueue != null) {
                message.MaxReceiveQueue = data.MaxReceiveQueue;
            }
            return message;
        };
        QueueMessagePolicy.prototype.toObject = function () {
            var data = {};
            if (this.ExpirationSeconds != null) {
                data.ExpirationSeconds = this.ExpirationSeconds;
            }
            if (this.DelaySeconds != null) {
                data.DelaySeconds = this.DelaySeconds;
            }
            if (this.MaxReceiveCount != null) {
                data.MaxReceiveCount = this.MaxReceiveCount;
            }
            if (this.MaxReceiveQueue != null) {
                data.MaxReceiveQueue = this.MaxReceiveQueue;
            }
            return data;
        };
        QueueMessagePolicy.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.ExpirationSeconds != 0)
                writer.writeInt32(1, this.ExpirationSeconds);
            if (this.DelaySeconds != 0)
                writer.writeInt32(2, this.DelaySeconds);
            if (this.MaxReceiveCount != 0)
                writer.writeInt32(3, this.MaxReceiveCount);
            if (this.MaxReceiveQueue.length)
                writer.writeString(4, this.MaxReceiveQueue);
            if (!w)
                return writer.getResultBuffer();
        };
        QueueMessagePolicy.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueueMessagePolicy();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.ExpirationSeconds = reader.readInt32();
                        break;
                    case 2:
                        message.DelaySeconds = reader.readInt32();
                        break;
                    case 3:
                        message.MaxReceiveCount = reader.readInt32();
                        break;
                    case 4:
                        message.MaxReceiveQueue = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueueMessagePolicy.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueueMessagePolicy.deserializeBinary = function (bytes) {
            return QueueMessagePolicy.deserialize(bytes);
        };
        return QueueMessagePolicy;
    }(pb_1.Message));
    _QueueMessagePolicy_one_of_decls = new WeakMap();
    kubemq.QueueMessagePolicy = QueueMessagePolicy;
    var SendQueueMessageResult = /** @class */ (function (_super) {
        __extends(SendQueueMessageResult, _super);
        function SendQueueMessageResult(data) {
            var _this = _super.call(this) || this;
            _SendQueueMessageResult_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _SendQueueMessageResult_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("MessageID" in data && data.MessageID != undefined) {
                    _this.MessageID = data.MessageID;
                }
                if ("SentAt" in data && data.SentAt != undefined) {
                    _this.SentAt = data.SentAt;
                }
                if ("ExpirationAt" in data && data.ExpirationAt != undefined) {
                    _this.ExpirationAt = data.ExpirationAt;
                }
                if ("DelayedTo" in data && data.DelayedTo != undefined) {
                    _this.DelayedTo = data.DelayedTo;
                }
                if ("IsError" in data && data.IsError != undefined) {
                    _this.IsError = data.IsError;
                }
                if ("Error" in data && data.Error != undefined) {
                    _this.Error = data.Error;
                }
                if ("RefChannel" in data && data.RefChannel != undefined) {
                    _this.RefChannel = data.RefChannel;
                }
                if ("RefTopic" in data && data.RefTopic != undefined) {
                    _this.RefTopic = data.RefTopic;
                }
                if ("RefPartition" in data && data.RefPartition != undefined) {
                    _this.RefPartition = data.RefPartition;
                }
                if ("RefHash" in data && data.RefHash != undefined) {
                    _this.RefHash = data.RefHash;
                }
            }
            return _this;
        }
        Object.defineProperty(SendQueueMessageResult.prototype, "MessageID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SendQueueMessageResult.prototype, "SentAt", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SendQueueMessageResult.prototype, "ExpirationAt", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SendQueueMessageResult.prototype, "DelayedTo", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SendQueueMessageResult.prototype, "IsError", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SendQueueMessageResult.prototype, "Error", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SendQueueMessageResult.prototype, "RefChannel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 7, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 7, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SendQueueMessageResult.prototype, "RefTopic", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 8, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 8, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SendQueueMessageResult.prototype, "RefPartition", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 9, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 9, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SendQueueMessageResult.prototype, "RefHash", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 10, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 10, value);
            },
            enumerable: false,
            configurable: true
        });
        SendQueueMessageResult.fromObject = function (data) {
            var message = new SendQueueMessageResult({});
            if (data.MessageID != null) {
                message.MessageID = data.MessageID;
            }
            if (data.SentAt != null) {
                message.SentAt = data.SentAt;
            }
            if (data.ExpirationAt != null) {
                message.ExpirationAt = data.ExpirationAt;
            }
            if (data.DelayedTo != null) {
                message.DelayedTo = data.DelayedTo;
            }
            if (data.IsError != null) {
                message.IsError = data.IsError;
            }
            if (data.Error != null) {
                message.Error = data.Error;
            }
            if (data.RefChannel != null) {
                message.RefChannel = data.RefChannel;
            }
            if (data.RefTopic != null) {
                message.RefTopic = data.RefTopic;
            }
            if (data.RefPartition != null) {
                message.RefPartition = data.RefPartition;
            }
            if (data.RefHash != null) {
                message.RefHash = data.RefHash;
            }
            return message;
        };
        SendQueueMessageResult.prototype.toObject = function () {
            var data = {};
            if (this.MessageID != null) {
                data.MessageID = this.MessageID;
            }
            if (this.SentAt != null) {
                data.SentAt = this.SentAt;
            }
            if (this.ExpirationAt != null) {
                data.ExpirationAt = this.ExpirationAt;
            }
            if (this.DelayedTo != null) {
                data.DelayedTo = this.DelayedTo;
            }
            if (this.IsError != null) {
                data.IsError = this.IsError;
            }
            if (this.Error != null) {
                data.Error = this.Error;
            }
            if (this.RefChannel != null) {
                data.RefChannel = this.RefChannel;
            }
            if (this.RefTopic != null) {
                data.RefTopic = this.RefTopic;
            }
            if (this.RefPartition != null) {
                data.RefPartition = this.RefPartition;
            }
            if (this.RefHash != null) {
                data.RefHash = this.RefHash;
            }
            return data;
        };
        SendQueueMessageResult.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.MessageID.length)
                writer.writeString(1, this.MessageID);
            if (this.SentAt != 0)
                writer.writeInt64(2, this.SentAt);
            if (this.ExpirationAt != 0)
                writer.writeInt64(3, this.ExpirationAt);
            if (this.DelayedTo != 0)
                writer.writeInt64(4, this.DelayedTo);
            if (this.IsError != false)
                writer.writeBool(5, this.IsError);
            if (this.Error.length)
                writer.writeString(6, this.Error);
            if (this.RefChannel.length)
                writer.writeString(7, this.RefChannel);
            if (this.RefTopic.length)
                writer.writeString(8, this.RefTopic);
            if (this.RefPartition != 0)
                writer.writeInt32(9, this.RefPartition);
            if (this.RefHash.length)
                writer.writeString(10, this.RefHash);
            if (!w)
                return writer.getResultBuffer();
        };
        SendQueueMessageResult.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SendQueueMessageResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.MessageID = reader.readString();
                        break;
                    case 2:
                        message.SentAt = reader.readInt64();
                        break;
                    case 3:
                        message.ExpirationAt = reader.readInt64();
                        break;
                    case 4:
                        message.DelayedTo = reader.readInt64();
                        break;
                    case 5:
                        message.IsError = reader.readBool();
                        break;
                    case 6:
                        message.Error = reader.readString();
                        break;
                    case 7:
                        message.RefChannel = reader.readString();
                        break;
                    case 8:
                        message.RefTopic = reader.readString();
                        break;
                    case 9:
                        message.RefPartition = reader.readInt32();
                        break;
                    case 10:
                        message.RefHash = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        SendQueueMessageResult.prototype.serializeBinary = function () {
            return this.serialize();
        };
        SendQueueMessageResult.deserializeBinary = function (bytes) {
            return SendQueueMessageResult.deserialize(bytes);
        };
        return SendQueueMessageResult;
    }(pb_1.Message));
    _SendQueueMessageResult_one_of_decls = new WeakMap();
    kubemq.SendQueueMessageResult = SendQueueMessageResult;
    var ReceiveQueueMessagesRequest = /** @class */ (function (_super) {
        __extends(ReceiveQueueMessagesRequest, _super);
        function ReceiveQueueMessagesRequest(data) {
            var _this = _super.call(this) || this;
            _ReceiveQueueMessagesRequest_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _ReceiveQueueMessagesRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("RequestID" in data && data.RequestID != undefined) {
                    _this.RequestID = data.RequestID;
                }
                if ("ClientID" in data && data.ClientID != undefined) {
                    _this.ClientID = data.ClientID;
                }
                if ("Channel" in data && data.Channel != undefined) {
                    _this.Channel = data.Channel;
                }
                if ("MaxNumberOfMessages" in data && data.MaxNumberOfMessages != undefined) {
                    _this.MaxNumberOfMessages = data.MaxNumberOfMessages;
                }
                if ("WaitTimeSeconds" in data && data.WaitTimeSeconds != undefined) {
                    _this.WaitTimeSeconds = data.WaitTimeSeconds;
                }
                if ("IsPeak" in data && data.IsPeak != undefined) {
                    _this.IsPeak = data.IsPeak;
                }
            }
            return _this;
        }
        Object.defineProperty(ReceiveQueueMessagesRequest.prototype, "RequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ReceiveQueueMessagesRequest.prototype, "ClientID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ReceiveQueueMessagesRequest.prototype, "Channel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ReceiveQueueMessagesRequest.prototype, "MaxNumberOfMessages", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ReceiveQueueMessagesRequest.prototype, "WaitTimeSeconds", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ReceiveQueueMessagesRequest.prototype, "IsPeak", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        ReceiveQueueMessagesRequest.fromObject = function (data) {
            var message = new ReceiveQueueMessagesRequest({});
            if (data.RequestID != null) {
                message.RequestID = data.RequestID;
            }
            if (data.ClientID != null) {
                message.ClientID = data.ClientID;
            }
            if (data.Channel != null) {
                message.Channel = data.Channel;
            }
            if (data.MaxNumberOfMessages != null) {
                message.MaxNumberOfMessages = data.MaxNumberOfMessages;
            }
            if (data.WaitTimeSeconds != null) {
                message.WaitTimeSeconds = data.WaitTimeSeconds;
            }
            if (data.IsPeak != null) {
                message.IsPeak = data.IsPeak;
            }
            return message;
        };
        ReceiveQueueMessagesRequest.prototype.toObject = function () {
            var data = {};
            if (this.RequestID != null) {
                data.RequestID = this.RequestID;
            }
            if (this.ClientID != null) {
                data.ClientID = this.ClientID;
            }
            if (this.Channel != null) {
                data.Channel = this.Channel;
            }
            if (this.MaxNumberOfMessages != null) {
                data.MaxNumberOfMessages = this.MaxNumberOfMessages;
            }
            if (this.WaitTimeSeconds != null) {
                data.WaitTimeSeconds = this.WaitTimeSeconds;
            }
            if (this.IsPeak != null) {
                data.IsPeak = this.IsPeak;
            }
            return data;
        };
        ReceiveQueueMessagesRequest.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.RequestID.length)
                writer.writeString(1, this.RequestID);
            if (this.ClientID.length)
                writer.writeString(2, this.ClientID);
            if (this.Channel.length)
                writer.writeString(3, this.Channel);
            if (this.MaxNumberOfMessages != 0)
                writer.writeInt32(4, this.MaxNumberOfMessages);
            if (this.WaitTimeSeconds != 0)
                writer.writeInt32(5, this.WaitTimeSeconds);
            if (this.IsPeak != false)
                writer.writeBool(6, this.IsPeak);
            if (!w)
                return writer.getResultBuffer();
        };
        ReceiveQueueMessagesRequest.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReceiveQueueMessagesRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.RequestID = reader.readString();
                        break;
                    case 2:
                        message.ClientID = reader.readString();
                        break;
                    case 3:
                        message.Channel = reader.readString();
                        break;
                    case 4:
                        message.MaxNumberOfMessages = reader.readInt32();
                        break;
                    case 5:
                        message.WaitTimeSeconds = reader.readInt32();
                        break;
                    case 6:
                        message.IsPeak = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        ReceiveQueueMessagesRequest.prototype.serializeBinary = function () {
            return this.serialize();
        };
        ReceiveQueueMessagesRequest.deserializeBinary = function (bytes) {
            return ReceiveQueueMessagesRequest.deserialize(bytes);
        };
        return ReceiveQueueMessagesRequest;
    }(pb_1.Message));
    _ReceiveQueueMessagesRequest_one_of_decls = new WeakMap();
    kubemq.ReceiveQueueMessagesRequest = ReceiveQueueMessagesRequest;
    var ReceiveQueueMessagesResponse = /** @class */ (function (_super) {
        __extends(ReceiveQueueMessagesResponse, _super);
        function ReceiveQueueMessagesResponse(data) {
            var _this = _super.call(this) || this;
            _ReceiveQueueMessagesResponse_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [2], __classPrivateFieldGet(_this, _ReceiveQueueMessagesResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("RequestID" in data && data.RequestID != undefined) {
                    _this.RequestID = data.RequestID;
                }
                if ("Messages" in data && data.Messages != undefined) {
                    _this.Messages = data.Messages;
                }
                if ("MessagesReceived" in data && data.MessagesReceived != undefined) {
                    _this.MessagesReceived = data.MessagesReceived;
                }
                if ("MessagesExpired" in data && data.MessagesExpired != undefined) {
                    _this.MessagesExpired = data.MessagesExpired;
                }
                if ("IsPeak" in data && data.IsPeak != undefined) {
                    _this.IsPeak = data.IsPeak;
                }
                if ("IsError" in data && data.IsError != undefined) {
                    _this.IsError = data.IsError;
                }
                if ("Error" in data && data.Error != undefined) {
                    _this.Error = data.Error;
                }
            }
            return _this;
        }
        Object.defineProperty(ReceiveQueueMessagesResponse.prototype, "RequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ReceiveQueueMessagesResponse.prototype, "Messages", {
            get: function () {
                return pb_1.Message.getRepeatedWrapperField(this, QueueMessage, 2);
            },
            set: function (value) {
                pb_1.Message.setRepeatedWrapperField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ReceiveQueueMessagesResponse.prototype, "MessagesReceived", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ReceiveQueueMessagesResponse.prototype, "MessagesExpired", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ReceiveQueueMessagesResponse.prototype, "IsPeak", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ReceiveQueueMessagesResponse.prototype, "IsError", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ReceiveQueueMessagesResponse.prototype, "Error", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 7, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 7, value);
            },
            enumerable: false,
            configurable: true
        });
        ReceiveQueueMessagesResponse.fromObject = function (data) {
            var message = new ReceiveQueueMessagesResponse({});
            if (data.RequestID != null) {
                message.RequestID = data.RequestID;
            }
            if (data.Messages != null) {
                message.Messages = data.Messages.map(function (item) { return QueueMessage.fromObject(item); });
            }
            if (data.MessagesReceived != null) {
                message.MessagesReceived = data.MessagesReceived;
            }
            if (data.MessagesExpired != null) {
                message.MessagesExpired = data.MessagesExpired;
            }
            if (data.IsPeak != null) {
                message.IsPeak = data.IsPeak;
            }
            if (data.IsError != null) {
                message.IsError = data.IsError;
            }
            if (data.Error != null) {
                message.Error = data.Error;
            }
            return message;
        };
        ReceiveQueueMessagesResponse.prototype.toObject = function () {
            var data = {};
            if (this.RequestID != null) {
                data.RequestID = this.RequestID;
            }
            if (this.Messages != null) {
                data.Messages = this.Messages.map(function (item) { return item.toObject(); });
            }
            if (this.MessagesReceived != null) {
                data.MessagesReceived = this.MessagesReceived;
            }
            if (this.MessagesExpired != null) {
                data.MessagesExpired = this.MessagesExpired;
            }
            if (this.IsPeak != null) {
                data.IsPeak = this.IsPeak;
            }
            if (this.IsError != null) {
                data.IsError = this.IsError;
            }
            if (this.Error != null) {
                data.Error = this.Error;
            }
            return data;
        };
        ReceiveQueueMessagesResponse.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.RequestID.length)
                writer.writeString(1, this.RequestID);
            if (this.Messages.length)
                writer.writeRepeatedMessage(2, this.Messages, function (item) { return item.serialize(writer); });
            if (this.MessagesReceived != 0)
                writer.writeInt32(3, this.MessagesReceived);
            if (this.MessagesExpired != 0)
                writer.writeInt32(4, this.MessagesExpired);
            if (this.IsPeak != false)
                writer.writeBool(5, this.IsPeak);
            if (this.IsError != false)
                writer.writeBool(6, this.IsError);
            if (this.Error.length)
                writer.writeString(7, this.Error);
            if (!w)
                return writer.getResultBuffer();
        };
        ReceiveQueueMessagesResponse.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReceiveQueueMessagesResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.RequestID = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.Messages, function () { return pb_1.Message.addToRepeatedWrapperField(message, 2, QueueMessage.deserialize(reader), QueueMessage); });
                        break;
                    case 3:
                        message.MessagesReceived = reader.readInt32();
                        break;
                    case 4:
                        message.MessagesExpired = reader.readInt32();
                        break;
                    case 5:
                        message.IsPeak = reader.readBool();
                        break;
                    case 6:
                        message.IsError = reader.readBool();
                        break;
                    case 7:
                        message.Error = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        ReceiveQueueMessagesResponse.prototype.serializeBinary = function () {
            return this.serialize();
        };
        ReceiveQueueMessagesResponse.deserializeBinary = function (bytes) {
            return ReceiveQueueMessagesResponse.deserialize(bytes);
        };
        return ReceiveQueueMessagesResponse;
    }(pb_1.Message));
    _ReceiveQueueMessagesResponse_one_of_decls = new WeakMap();
    kubemq.ReceiveQueueMessagesResponse = ReceiveQueueMessagesResponse;
    var AckAllQueueMessagesRequest = /** @class */ (function (_super) {
        __extends(AckAllQueueMessagesRequest, _super);
        function AckAllQueueMessagesRequest(data) {
            var _this = _super.call(this) || this;
            _AckAllQueueMessagesRequest_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _AckAllQueueMessagesRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("RequestID" in data && data.RequestID != undefined) {
                    _this.RequestID = data.RequestID;
                }
                if ("ClientID" in data && data.ClientID != undefined) {
                    _this.ClientID = data.ClientID;
                }
                if ("Channel" in data && data.Channel != undefined) {
                    _this.Channel = data.Channel;
                }
                if ("WaitTimeSeconds" in data && data.WaitTimeSeconds != undefined) {
                    _this.WaitTimeSeconds = data.WaitTimeSeconds;
                }
            }
            return _this;
        }
        Object.defineProperty(AckAllQueueMessagesRequest.prototype, "RequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AckAllQueueMessagesRequest.prototype, "ClientID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AckAllQueueMessagesRequest.prototype, "Channel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AckAllQueueMessagesRequest.prototype, "WaitTimeSeconds", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        AckAllQueueMessagesRequest.fromObject = function (data) {
            var message = new AckAllQueueMessagesRequest({});
            if (data.RequestID != null) {
                message.RequestID = data.RequestID;
            }
            if (data.ClientID != null) {
                message.ClientID = data.ClientID;
            }
            if (data.Channel != null) {
                message.Channel = data.Channel;
            }
            if (data.WaitTimeSeconds != null) {
                message.WaitTimeSeconds = data.WaitTimeSeconds;
            }
            return message;
        };
        AckAllQueueMessagesRequest.prototype.toObject = function () {
            var data = {};
            if (this.RequestID != null) {
                data.RequestID = this.RequestID;
            }
            if (this.ClientID != null) {
                data.ClientID = this.ClientID;
            }
            if (this.Channel != null) {
                data.Channel = this.Channel;
            }
            if (this.WaitTimeSeconds != null) {
                data.WaitTimeSeconds = this.WaitTimeSeconds;
            }
            return data;
        };
        AckAllQueueMessagesRequest.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.RequestID.length)
                writer.writeString(1, this.RequestID);
            if (this.ClientID.length)
                writer.writeString(2, this.ClientID);
            if (this.Channel.length)
                writer.writeString(3, this.Channel);
            if (this.WaitTimeSeconds != 0)
                writer.writeInt32(4, this.WaitTimeSeconds);
            if (!w)
                return writer.getResultBuffer();
        };
        AckAllQueueMessagesRequest.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AckAllQueueMessagesRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.RequestID = reader.readString();
                        break;
                    case 2:
                        message.ClientID = reader.readString();
                        break;
                    case 3:
                        message.Channel = reader.readString();
                        break;
                    case 4:
                        message.WaitTimeSeconds = reader.readInt32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        AckAllQueueMessagesRequest.prototype.serializeBinary = function () {
            return this.serialize();
        };
        AckAllQueueMessagesRequest.deserializeBinary = function (bytes) {
            return AckAllQueueMessagesRequest.deserialize(bytes);
        };
        return AckAllQueueMessagesRequest;
    }(pb_1.Message));
    _AckAllQueueMessagesRequest_one_of_decls = new WeakMap();
    kubemq.AckAllQueueMessagesRequest = AckAllQueueMessagesRequest;
    var AckAllQueueMessagesResponse = /** @class */ (function (_super) {
        __extends(AckAllQueueMessagesResponse, _super);
        function AckAllQueueMessagesResponse(data) {
            var _this = _super.call(this) || this;
            _AckAllQueueMessagesResponse_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _AckAllQueueMessagesResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("RequestID" in data && data.RequestID != undefined) {
                    _this.RequestID = data.RequestID;
                }
                if ("AffectedMessages" in data && data.AffectedMessages != undefined) {
                    _this.AffectedMessages = data.AffectedMessages;
                }
                if ("IsError" in data && data.IsError != undefined) {
                    _this.IsError = data.IsError;
                }
                if ("Error" in data && data.Error != undefined) {
                    _this.Error = data.Error;
                }
            }
            return _this;
        }
        Object.defineProperty(AckAllQueueMessagesResponse.prototype, "RequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AckAllQueueMessagesResponse.prototype, "AffectedMessages", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AckAllQueueMessagesResponse.prototype, "IsError", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AckAllQueueMessagesResponse.prototype, "Error", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        AckAllQueueMessagesResponse.fromObject = function (data) {
            var message = new AckAllQueueMessagesResponse({});
            if (data.RequestID != null) {
                message.RequestID = data.RequestID;
            }
            if (data.AffectedMessages != null) {
                message.AffectedMessages = data.AffectedMessages;
            }
            if (data.IsError != null) {
                message.IsError = data.IsError;
            }
            if (data.Error != null) {
                message.Error = data.Error;
            }
            return message;
        };
        AckAllQueueMessagesResponse.prototype.toObject = function () {
            var data = {};
            if (this.RequestID != null) {
                data.RequestID = this.RequestID;
            }
            if (this.AffectedMessages != null) {
                data.AffectedMessages = this.AffectedMessages;
            }
            if (this.IsError != null) {
                data.IsError = this.IsError;
            }
            if (this.Error != null) {
                data.Error = this.Error;
            }
            return data;
        };
        AckAllQueueMessagesResponse.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.RequestID.length)
                writer.writeString(1, this.RequestID);
            if (this.AffectedMessages != 0)
                writer.writeUint64(2, this.AffectedMessages);
            if (this.IsError != false)
                writer.writeBool(3, this.IsError);
            if (this.Error.length)
                writer.writeString(4, this.Error);
            if (!w)
                return writer.getResultBuffer();
        };
        AckAllQueueMessagesResponse.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AckAllQueueMessagesResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.RequestID = reader.readString();
                        break;
                    case 2:
                        message.AffectedMessages = reader.readUint64();
                        break;
                    case 3:
                        message.IsError = reader.readBool();
                        break;
                    case 4:
                        message.Error = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        AckAllQueueMessagesResponse.prototype.serializeBinary = function () {
            return this.serialize();
        };
        AckAllQueueMessagesResponse.deserializeBinary = function (bytes) {
            return AckAllQueueMessagesResponse.deserialize(bytes);
        };
        return AckAllQueueMessagesResponse;
    }(pb_1.Message));
    _AckAllQueueMessagesResponse_one_of_decls = new WeakMap();
    kubemq.AckAllQueueMessagesResponse = AckAllQueueMessagesResponse;
    var StreamQueueMessagesRequest = /** @class */ (function (_super) {
        __extends(StreamQueueMessagesRequest, _super);
        function StreamQueueMessagesRequest(data) {
            var _this = _super.call(this) || this;
            _StreamQueueMessagesRequest_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _StreamQueueMessagesRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("RequestID" in data && data.RequestID != undefined) {
                    _this.RequestID = data.RequestID;
                }
                if ("ClientID" in data && data.ClientID != undefined) {
                    _this.ClientID = data.ClientID;
                }
                if ("StreamRequestTypeData" in data && data.StreamRequestTypeData != undefined) {
                    _this.StreamRequestTypeData = data.StreamRequestTypeData;
                }
                if ("Channel" in data && data.Channel != undefined) {
                    _this.Channel = data.Channel;
                }
                if ("VisibilitySeconds" in data && data.VisibilitySeconds != undefined) {
                    _this.VisibilitySeconds = data.VisibilitySeconds;
                }
                if ("WaitTimeSeconds" in data && data.WaitTimeSeconds != undefined) {
                    _this.WaitTimeSeconds = data.WaitTimeSeconds;
                }
                if ("RefSequence" in data && data.RefSequence != undefined) {
                    _this.RefSequence = data.RefSequence;
                }
                if ("ModifiedMessage" in data && data.ModifiedMessage != undefined) {
                    _this.ModifiedMessage = data.ModifiedMessage;
                }
            }
            return _this;
        }
        Object.defineProperty(StreamQueueMessagesRequest.prototype, "RequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesRequest.prototype, "ClientID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesRequest.prototype, "StreamRequestTypeData", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, StreamRequestType.StreamRequestTypeUnknown);
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesRequest.prototype, "Channel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesRequest.prototype, "VisibilitySeconds", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesRequest.prototype, "WaitTimeSeconds", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesRequest.prototype, "RefSequence", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 7, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 7, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesRequest.prototype, "ModifiedMessage", {
            get: function () {
                return pb_1.Message.getWrapperField(this, QueueMessage, 8);
            },
            set: function (value) {
                pb_1.Message.setWrapperField(this, 8, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesRequest.prototype, "has_ModifiedMessage", {
            get: function () {
                return pb_1.Message.getField(this, 8) != null;
            },
            enumerable: false,
            configurable: true
        });
        StreamQueueMessagesRequest.fromObject = function (data) {
            var message = new StreamQueueMessagesRequest({});
            if (data.RequestID != null) {
                message.RequestID = data.RequestID;
            }
            if (data.ClientID != null) {
                message.ClientID = data.ClientID;
            }
            if (data.StreamRequestTypeData != null) {
                message.StreamRequestTypeData = data.StreamRequestTypeData;
            }
            if (data.Channel != null) {
                message.Channel = data.Channel;
            }
            if (data.VisibilitySeconds != null) {
                message.VisibilitySeconds = data.VisibilitySeconds;
            }
            if (data.WaitTimeSeconds != null) {
                message.WaitTimeSeconds = data.WaitTimeSeconds;
            }
            if (data.RefSequence != null) {
                message.RefSequence = data.RefSequence;
            }
            if (data.ModifiedMessage != null) {
                message.ModifiedMessage = QueueMessage.fromObject(data.ModifiedMessage);
            }
            return message;
        };
        StreamQueueMessagesRequest.prototype.toObject = function () {
            var data = {};
            if (this.RequestID != null) {
                data.RequestID = this.RequestID;
            }
            if (this.ClientID != null) {
                data.ClientID = this.ClientID;
            }
            if (this.StreamRequestTypeData != null) {
                data.StreamRequestTypeData = this.StreamRequestTypeData;
            }
            if (this.Channel != null) {
                data.Channel = this.Channel;
            }
            if (this.VisibilitySeconds != null) {
                data.VisibilitySeconds = this.VisibilitySeconds;
            }
            if (this.WaitTimeSeconds != null) {
                data.WaitTimeSeconds = this.WaitTimeSeconds;
            }
            if (this.RefSequence != null) {
                data.RefSequence = this.RefSequence;
            }
            if (this.ModifiedMessage != null) {
                data.ModifiedMessage = this.ModifiedMessage.toObject();
            }
            return data;
        };
        StreamQueueMessagesRequest.prototype.serialize = function (w) {
            var _this = this;
            var writer = w || new pb_1.BinaryWriter();
            if (this.RequestID.length)
                writer.writeString(1, this.RequestID);
            if (this.ClientID.length)
                writer.writeString(2, this.ClientID);
            if (this.StreamRequestTypeData != StreamRequestType.StreamRequestTypeUnknown)
                writer.writeEnum(3, this.StreamRequestTypeData);
            if (this.Channel.length)
                writer.writeString(4, this.Channel);
            if (this.VisibilitySeconds != 0)
                writer.writeInt32(5, this.VisibilitySeconds);
            if (this.WaitTimeSeconds != 0)
                writer.writeInt32(6, this.WaitTimeSeconds);
            if (this.RefSequence != 0)
                writer.writeUint64(7, this.RefSequence);
            if (this.has_ModifiedMessage)
                writer.writeMessage(8, this.ModifiedMessage, function () { return _this.ModifiedMessage.serialize(writer); });
            if (!w)
                return writer.getResultBuffer();
        };
        StreamQueueMessagesRequest.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new StreamQueueMessagesRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.RequestID = reader.readString();
                        break;
                    case 2:
                        message.ClientID = reader.readString();
                        break;
                    case 3:
                        message.StreamRequestTypeData = reader.readEnum();
                        break;
                    case 4:
                        message.Channel = reader.readString();
                        break;
                    case 5:
                        message.VisibilitySeconds = reader.readInt32();
                        break;
                    case 6:
                        message.WaitTimeSeconds = reader.readInt32();
                        break;
                    case 7:
                        message.RefSequence = reader.readUint64();
                        break;
                    case 8:
                        reader.readMessage(message.ModifiedMessage, function () { return message.ModifiedMessage = QueueMessage.deserialize(reader); });
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        StreamQueueMessagesRequest.prototype.serializeBinary = function () {
            return this.serialize();
        };
        StreamQueueMessagesRequest.deserializeBinary = function (bytes) {
            return StreamQueueMessagesRequest.deserialize(bytes);
        };
        return StreamQueueMessagesRequest;
    }(pb_1.Message));
    _StreamQueueMessagesRequest_one_of_decls = new WeakMap();
    kubemq.StreamQueueMessagesRequest = StreamQueueMessagesRequest;
    var StreamQueueMessagesResponse = /** @class */ (function (_super) {
        __extends(StreamQueueMessagesResponse, _super);
        function StreamQueueMessagesResponse(data) {
            var _this = _super.call(this) || this;
            _StreamQueueMessagesResponse_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _StreamQueueMessagesResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("RequestID" in data && data.RequestID != undefined) {
                    _this.RequestID = data.RequestID;
                }
                if ("StreamRequestTypeData" in data && data.StreamRequestTypeData != undefined) {
                    _this.StreamRequestTypeData = data.StreamRequestTypeData;
                }
                if ("Message" in data && data.Message != undefined) {
                    _this.Message = data.Message;
                }
                if ("IsError" in data && data.IsError != undefined) {
                    _this.IsError = data.IsError;
                }
                if ("Error" in data && data.Error != undefined) {
                    _this.Error = data.Error;
                }
            }
            return _this;
        }
        Object.defineProperty(StreamQueueMessagesResponse.prototype, "RequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesResponse.prototype, "StreamRequestTypeData", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, StreamRequestType.StreamRequestTypeUnknown);
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesResponse.prototype, "Message", {
            get: function () {
                return pb_1.Message.getWrapperField(this, QueueMessage, 3);
            },
            set: function (value) {
                pb_1.Message.setWrapperField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesResponse.prototype, "has_Message", {
            get: function () {
                return pb_1.Message.getField(this, 3) != null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesResponse.prototype, "IsError", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamQueueMessagesResponse.prototype, "Error", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        StreamQueueMessagesResponse.fromObject = function (data) {
            var message = new StreamQueueMessagesResponse({});
            if (data.RequestID != null) {
                message.RequestID = data.RequestID;
            }
            if (data.StreamRequestTypeData != null) {
                message.StreamRequestTypeData = data.StreamRequestTypeData;
            }
            if (data.Message != null) {
                message.Message = QueueMessage.fromObject(data.Message);
            }
            if (data.IsError != null) {
                message.IsError = data.IsError;
            }
            if (data.Error != null) {
                message.Error = data.Error;
            }
            return message;
        };
        StreamQueueMessagesResponse.prototype.toObject = function () {
            var data = {};
            if (this.RequestID != null) {
                data.RequestID = this.RequestID;
            }
            if (this.StreamRequestTypeData != null) {
                data.StreamRequestTypeData = this.StreamRequestTypeData;
            }
            if (this.Message != null) {
                data.Message = this.Message.toObject();
            }
            if (this.IsError != null) {
                data.IsError = this.IsError;
            }
            if (this.Error != null) {
                data.Error = this.Error;
            }
            return data;
        };
        StreamQueueMessagesResponse.prototype.serialize = function (w) {
            var _this = this;
            var writer = w || new pb_1.BinaryWriter();
            if (this.RequestID.length)
                writer.writeString(1, this.RequestID);
            if (this.StreamRequestTypeData != StreamRequestType.StreamRequestTypeUnknown)
                writer.writeEnum(2, this.StreamRequestTypeData);
            if (this.has_Message)
                writer.writeMessage(3, this.Message, function () { return _this.Message.serialize(writer); });
            if (this.IsError != false)
                writer.writeBool(4, this.IsError);
            if (this.Error.length)
                writer.writeString(5, this.Error);
            if (!w)
                return writer.getResultBuffer();
        };
        StreamQueueMessagesResponse.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new StreamQueueMessagesResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.RequestID = reader.readString();
                        break;
                    case 2:
                        message.StreamRequestTypeData = reader.readEnum();
                        break;
                    case 3:
                        reader.readMessage(message.Message, function () { return message.Message = QueueMessage.deserialize(reader); });
                        break;
                    case 4:
                        message.IsError = reader.readBool();
                        break;
                    case 5:
                        message.Error = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        StreamQueueMessagesResponse.prototype.serializeBinary = function () {
            return this.serialize();
        };
        StreamQueueMessagesResponse.deserializeBinary = function (bytes) {
            return StreamQueueMessagesResponse.deserialize(bytes);
        };
        return StreamQueueMessagesResponse;
    }(pb_1.Message));
    _StreamQueueMessagesResponse_one_of_decls = new WeakMap();
    kubemq.StreamQueueMessagesResponse = StreamQueueMessagesResponse;
    var QueuesUpstreamRequest = /** @class */ (function (_super) {
        __extends(QueuesUpstreamRequest, _super);
        function QueuesUpstreamRequest(data) {
            var _this = _super.call(this) || this;
            _QueuesUpstreamRequest_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [2], __classPrivateFieldGet(_this, _QueuesUpstreamRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("RequestID" in data && data.RequestID != undefined) {
                    _this.RequestID = data.RequestID;
                }
                if ("Messages" in data && data.Messages != undefined) {
                    _this.Messages = data.Messages;
                }
            }
            return _this;
        }
        Object.defineProperty(QueuesUpstreamRequest.prototype, "RequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesUpstreamRequest.prototype, "Messages", {
            get: function () {
                return pb_1.Message.getRepeatedWrapperField(this, QueueMessage, 2);
            },
            set: function (value) {
                pb_1.Message.setRepeatedWrapperField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        QueuesUpstreamRequest.fromObject = function (data) {
            var message = new QueuesUpstreamRequest({});
            if (data.RequestID != null) {
                message.RequestID = data.RequestID;
            }
            if (data.Messages != null) {
                message.Messages = data.Messages.map(function (item) { return QueueMessage.fromObject(item); });
            }
            return message;
        };
        QueuesUpstreamRequest.prototype.toObject = function () {
            var data = {};
            if (this.RequestID != null) {
                data.RequestID = this.RequestID;
            }
            if (this.Messages != null) {
                data.Messages = this.Messages.map(function (item) { return item.toObject(); });
            }
            return data;
        };
        QueuesUpstreamRequest.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.RequestID.length)
                writer.writeString(1, this.RequestID);
            if (this.Messages.length)
                writer.writeRepeatedMessage(2, this.Messages, function (item) { return item.serialize(writer); });
            if (!w)
                return writer.getResultBuffer();
        };
        QueuesUpstreamRequest.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueuesUpstreamRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.RequestID = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.Messages, function () { return pb_1.Message.addToRepeatedWrapperField(message, 2, QueueMessage.deserialize(reader), QueueMessage); });
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueuesUpstreamRequest.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueuesUpstreamRequest.deserializeBinary = function (bytes) {
            return QueuesUpstreamRequest.deserialize(bytes);
        };
        return QueuesUpstreamRequest;
    }(pb_1.Message));
    _QueuesUpstreamRequest_one_of_decls = new WeakMap();
    kubemq.QueuesUpstreamRequest = QueuesUpstreamRequest;
    var QueuesUpstreamResponse = /** @class */ (function (_super) {
        __extends(QueuesUpstreamResponse, _super);
        function QueuesUpstreamResponse(data) {
            var _this = _super.call(this) || this;
            _QueuesUpstreamResponse_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [2], __classPrivateFieldGet(_this, _QueuesUpstreamResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("RefRequestID" in data && data.RefRequestID != undefined) {
                    _this.RefRequestID = data.RefRequestID;
                }
                if ("Results" in data && data.Results != undefined) {
                    _this.Results = data.Results;
                }
                if ("IsError" in data && data.IsError != undefined) {
                    _this.IsError = data.IsError;
                }
                if ("Error" in data && data.Error != undefined) {
                    _this.Error = data.Error;
                }
            }
            return _this;
        }
        Object.defineProperty(QueuesUpstreamResponse.prototype, "RefRequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesUpstreamResponse.prototype, "Results", {
            get: function () {
                return pb_1.Message.getRepeatedWrapperField(this, SendQueueMessageResult, 2);
            },
            set: function (value) {
                pb_1.Message.setRepeatedWrapperField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesUpstreamResponse.prototype, "IsError", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesUpstreamResponse.prototype, "Error", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        QueuesUpstreamResponse.fromObject = function (data) {
            var message = new QueuesUpstreamResponse({});
            if (data.RefRequestID != null) {
                message.RefRequestID = data.RefRequestID;
            }
            if (data.Results != null) {
                message.Results = data.Results.map(function (item) { return SendQueueMessageResult.fromObject(item); });
            }
            if (data.IsError != null) {
                message.IsError = data.IsError;
            }
            if (data.Error != null) {
                message.Error = data.Error;
            }
            return message;
        };
        QueuesUpstreamResponse.prototype.toObject = function () {
            var data = {};
            if (this.RefRequestID != null) {
                data.RefRequestID = this.RefRequestID;
            }
            if (this.Results != null) {
                data.Results = this.Results.map(function (item) { return item.toObject(); });
            }
            if (this.IsError != null) {
                data.IsError = this.IsError;
            }
            if (this.Error != null) {
                data.Error = this.Error;
            }
            return data;
        };
        QueuesUpstreamResponse.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.RefRequestID.length)
                writer.writeString(1, this.RefRequestID);
            if (this.Results.length)
                writer.writeRepeatedMessage(2, this.Results, function (item) { return item.serialize(writer); });
            if (this.IsError != false)
                writer.writeBool(3, this.IsError);
            if (this.Error.length)
                writer.writeString(4, this.Error);
            if (!w)
                return writer.getResultBuffer();
        };
        QueuesUpstreamResponse.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueuesUpstreamResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.RefRequestID = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.Results, function () { return pb_1.Message.addToRepeatedWrapperField(message, 2, SendQueueMessageResult.deserialize(reader), SendQueueMessageResult); });
                        break;
                    case 3:
                        message.IsError = reader.readBool();
                        break;
                    case 4:
                        message.Error = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueuesUpstreamResponse.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueuesUpstreamResponse.deserializeBinary = function (bytes) {
            return QueuesUpstreamResponse.deserialize(bytes);
        };
        return QueuesUpstreamResponse;
    }(pb_1.Message));
    _QueuesUpstreamResponse_one_of_decls = new WeakMap();
    kubemq.QueuesUpstreamResponse = QueuesUpstreamResponse;
    var QueuesDownstreamRequest = /** @class */ (function (_super) {
        __extends(QueuesDownstreamRequest, _super);
        function QueuesDownstreamRequest(data) {
            var _this = _super.call(this) || this;
            _QueuesDownstreamRequest_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [9], __classPrivateFieldGet(_this, _QueuesDownstreamRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("RequestID" in data && data.RequestID != undefined) {
                    _this.RequestID = data.RequestID;
                }
                if ("ClientID" in data && data.ClientID != undefined) {
                    _this.ClientID = data.ClientID;
                }
                if ("RequestTypeData" in data && data.RequestTypeData != undefined) {
                    _this.RequestTypeData = data.RequestTypeData;
                }
                if ("Channel" in data && data.Channel != undefined) {
                    _this.Channel = data.Channel;
                }
                if ("MaxItems" in data && data.MaxItems != undefined) {
                    _this.MaxItems = data.MaxItems;
                }
                if ("WaitTimeout" in data && data.WaitTimeout != undefined) {
                    _this.WaitTimeout = data.WaitTimeout;
                }
                if ("AutoAck" in data && data.AutoAck != undefined) {
                    _this.AutoAck = data.AutoAck;
                }
                if ("ReQueueChannel" in data && data.ReQueueChannel != undefined) {
                    _this.ReQueueChannel = data.ReQueueChannel;
                }
                if ("SequenceRange" in data && data.SequenceRange != undefined) {
                    _this.SequenceRange = data.SequenceRange;
                }
                if ("RefTransactionId" in data && data.RefTransactionId != undefined) {
                    _this.RefTransactionId = data.RefTransactionId;
                }
                if ("Metadata" in data && data.Metadata != undefined) {
                    _this.Metadata = data.Metadata;
                }
            }
            if (!_this.Metadata)
                _this.Metadata = new Map();
            return _this;
        }
        Object.defineProperty(QueuesDownstreamRequest.prototype, "RequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamRequest.prototype, "ClientID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamRequest.prototype, "RequestTypeData", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, QueuesDownstreamRequestType.PollRequestTypeUnknown);
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamRequest.prototype, "Channel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamRequest.prototype, "MaxItems", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamRequest.prototype, "WaitTimeout", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamRequest.prototype, "AutoAck", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 7, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 7, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamRequest.prototype, "ReQueueChannel", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 8, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 8, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamRequest.prototype, "SequenceRange", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 9, []);
            },
            set: function (value) {
                pb_1.Message.setField(this, 9, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamRequest.prototype, "RefTransactionId", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 10, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 10, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamRequest.prototype, "Metadata", {
            get: function () {
                return pb_1.Message.getField(this, 12);
            },
            set: function (value) {
                pb_1.Message.setField(this, 12, value);
            },
            enumerable: false,
            configurable: true
        });
        QueuesDownstreamRequest.fromObject = function (data) {
            var message = new QueuesDownstreamRequest({});
            if (data.RequestID != null) {
                message.RequestID = data.RequestID;
            }
            if (data.ClientID != null) {
                message.ClientID = data.ClientID;
            }
            if (data.RequestTypeData != null) {
                message.RequestTypeData = data.RequestTypeData;
            }
            if (data.Channel != null) {
                message.Channel = data.Channel;
            }
            if (data.MaxItems != null) {
                message.MaxItems = data.MaxItems;
            }
            if (data.WaitTimeout != null) {
                message.WaitTimeout = data.WaitTimeout;
            }
            if (data.AutoAck != null) {
                message.AutoAck = data.AutoAck;
            }
            if (data.ReQueueChannel != null) {
                message.ReQueueChannel = data.ReQueueChannel;
            }
            if (data.SequenceRange != null) {
                message.SequenceRange = data.SequenceRange;
            }
            if (data.RefTransactionId != null) {
                message.RefTransactionId = data.RefTransactionId;
            }
            if (typeof data.Metadata == "object") {
                message.Metadata = new Map(Object.entries(data.Metadata));
            }
            return message;
        };
        QueuesDownstreamRequest.prototype.toObject = function () {
            var data = {};
            if (this.RequestID != null) {
                data.RequestID = this.RequestID;
            }
            if (this.ClientID != null) {
                data.ClientID = this.ClientID;
            }
            if (this.RequestTypeData != null) {
                data.RequestTypeData = this.RequestTypeData;
            }
            if (this.Channel != null) {
                data.Channel = this.Channel;
            }
            if (this.MaxItems != null) {
                data.MaxItems = this.MaxItems;
            }
            if (this.WaitTimeout != null) {
                data.WaitTimeout = this.WaitTimeout;
            }
            if (this.AutoAck != null) {
                data.AutoAck = this.AutoAck;
            }
            if (this.ReQueueChannel != null) {
                data.ReQueueChannel = this.ReQueueChannel;
            }
            if (this.SequenceRange != null) {
                data.SequenceRange = this.SequenceRange;
            }
            if (this.RefTransactionId != null) {
                data.RefTransactionId = this.RefTransactionId;
            }
            if (this.Metadata != null) {
                data.Metadata = (Object.fromEntries)(this.Metadata);
            }
            return data;
        };
        QueuesDownstreamRequest.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.RequestID.length)
                writer.writeString(1, this.RequestID);
            if (this.ClientID.length)
                writer.writeString(2, this.ClientID);
            if (this.RequestTypeData != QueuesDownstreamRequestType.PollRequestTypeUnknown)
                writer.writeEnum(3, this.RequestTypeData);
            if (this.Channel.length)
                writer.writeString(4, this.Channel);
            if (this.MaxItems != 0)
                writer.writeInt32(5, this.MaxItems);
            if (this.WaitTimeout != 0)
                writer.writeInt32(6, this.WaitTimeout);
            if (this.AutoAck != false)
                writer.writeBool(7, this.AutoAck);
            if (this.ReQueueChannel.length)
                writer.writeString(8, this.ReQueueChannel);
            if (this.SequenceRange.length)
                writer.writePackedInt64(9, this.SequenceRange);
            if (this.RefTransactionId.length)
                writer.writeString(10, this.RefTransactionId);
            var _loop_6 = function (key, value) {
                writer.writeMessage(12, this_6.Metadata, function () {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            };
            var this_6 = this;
            for (var _i = 0, _a = this.Metadata; _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                _loop_6(key, value);
            }
            if (!w)
                return writer.getResultBuffer();
        };
        QueuesDownstreamRequest.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueuesDownstreamRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.RequestID = reader.readString();
                        break;
                    case 2:
                        message.ClientID = reader.readString();
                        break;
                    case 3:
                        message.RequestTypeData = reader.readEnum();
                        break;
                    case 4:
                        message.Channel = reader.readString();
                        break;
                    case 5:
                        message.MaxItems = reader.readInt32();
                        break;
                    case 6:
                        message.WaitTimeout = reader.readInt32();
                        break;
                    case 7:
                        message.AutoAck = reader.readBool();
                        break;
                    case 8:
                        message.ReQueueChannel = reader.readString();
                        break;
                    case 9:
                        message.SequenceRange = reader.readPackedInt64();
                        break;
                    case 10:
                        message.RefTransactionId = reader.readString();
                        break;
                    case 12:
                        reader.readMessage(message, function () { return pb_1.Map.deserializeBinary(message.Metadata, reader, reader.readString, reader.readString); });
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueuesDownstreamRequest.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueuesDownstreamRequest.deserializeBinary = function (bytes) {
            return QueuesDownstreamRequest.deserialize(bytes);
        };
        return QueuesDownstreamRequest;
    }(pb_1.Message));
    _QueuesDownstreamRequest_one_of_decls = new WeakMap();
    kubemq.QueuesDownstreamRequest = QueuesDownstreamRequest;
    var QueuesDownstreamResponse = /** @class */ (function (_super) {
        __extends(QueuesDownstreamResponse, _super);
        function QueuesDownstreamResponse(data) {
            var _this = _super.call(this) || this;
            _QueuesDownstreamResponse_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [4, 5], __classPrivateFieldGet(_this, _QueuesDownstreamResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("TransactionId" in data && data.TransactionId != undefined) {
                    _this.TransactionId = data.TransactionId;
                }
                if ("RefRequestId" in data && data.RefRequestId != undefined) {
                    _this.RefRequestId = data.RefRequestId;
                }
                if ("RequestTypeData" in data && data.RequestTypeData != undefined) {
                    _this.RequestTypeData = data.RequestTypeData;
                }
                if ("Messages" in data && data.Messages != undefined) {
                    _this.Messages = data.Messages;
                }
                if ("ActiveOffsets" in data && data.ActiveOffsets != undefined) {
                    _this.ActiveOffsets = data.ActiveOffsets;
                }
                if ("IsError" in data && data.IsError != undefined) {
                    _this.IsError = data.IsError;
                }
                if ("Error" in data && data.Error != undefined) {
                    _this.Error = data.Error;
                }
                if ("TransactionComplete" in data && data.TransactionComplete != undefined) {
                    _this.TransactionComplete = data.TransactionComplete;
                }
                if ("Metadata" in data && data.Metadata != undefined) {
                    _this.Metadata = data.Metadata;
                }
            }
            if (!_this.Metadata)
                _this.Metadata = new Map();
            return _this;
        }
        Object.defineProperty(QueuesDownstreamResponse.prototype, "TransactionId", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamResponse.prototype, "RefRequestId", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamResponse.prototype, "RequestTypeData", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, QueuesDownstreamRequestType.PollRequestTypeUnknown);
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamResponse.prototype, "Messages", {
            get: function () {
                return pb_1.Message.getRepeatedWrapperField(this, QueueMessage, 4);
            },
            set: function (value) {
                pb_1.Message.setRepeatedWrapperField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamResponse.prototype, "ActiveOffsets", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, []);
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamResponse.prototype, "IsError", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamResponse.prototype, "Error", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 7, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 7, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamResponse.prototype, "TransactionComplete", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 8, false);
            },
            set: function (value) {
                pb_1.Message.setField(this, 8, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesDownstreamResponse.prototype, "Metadata", {
            get: function () {
                return pb_1.Message.getField(this, 9);
            },
            set: function (value) {
                pb_1.Message.setField(this, 9, value);
            },
            enumerable: false,
            configurable: true
        });
        QueuesDownstreamResponse.fromObject = function (data) {
            var message = new QueuesDownstreamResponse({});
            if (data.TransactionId != null) {
                message.TransactionId = data.TransactionId;
            }
            if (data.RefRequestId != null) {
                message.RefRequestId = data.RefRequestId;
            }
            if (data.RequestTypeData != null) {
                message.RequestTypeData = data.RequestTypeData;
            }
            if (data.Messages != null) {
                message.Messages = data.Messages.map(function (item) { return QueueMessage.fromObject(item); });
            }
            if (data.ActiveOffsets != null) {
                message.ActiveOffsets = data.ActiveOffsets;
            }
            if (data.IsError != null) {
                message.IsError = data.IsError;
            }
            if (data.Error != null) {
                message.Error = data.Error;
            }
            if (data.TransactionComplete != null) {
                message.TransactionComplete = data.TransactionComplete;
            }
            if (typeof data.Metadata == "object") {
                message.Metadata = new Map(Object.entries(data.Metadata));
            }
            return message;
        };
        QueuesDownstreamResponse.prototype.toObject = function () {
            var data = {};
            if (this.TransactionId != null) {
                data.TransactionId = this.TransactionId;
            }
            if (this.RefRequestId != null) {
                data.RefRequestId = this.RefRequestId;
            }
            if (this.RequestTypeData != null) {
                data.RequestTypeData = this.RequestTypeData;
            }
            if (this.Messages != null) {
                data.Messages = this.Messages.map(function (item) { return item.toObject(); });
            }
            if (this.ActiveOffsets != null) {
                data.ActiveOffsets = this.ActiveOffsets;
            }
            if (this.IsError != null) {
                data.IsError = this.IsError;
            }
            if (this.Error != null) {
                data.Error = this.Error;
            }
            if (this.TransactionComplete != null) {
                data.TransactionComplete = this.TransactionComplete;
            }
            if (this.Metadata != null) {
                data.Metadata = (Object.fromEntries)(this.Metadata);
            }
            return data;
        };
        QueuesDownstreamResponse.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.TransactionId.length)
                writer.writeString(1, this.TransactionId);
            if (this.RefRequestId.length)
                writer.writeString(2, this.RefRequestId);
            if (this.RequestTypeData != QueuesDownstreamRequestType.PollRequestTypeUnknown)
                writer.writeEnum(3, this.RequestTypeData);
            if (this.Messages.length)
                writer.writeRepeatedMessage(4, this.Messages, function (item) { return item.serialize(writer); });
            if (this.ActiveOffsets.length)
                writer.writePackedInt64(5, this.ActiveOffsets);
            if (this.IsError != false)
                writer.writeBool(6, this.IsError);
            if (this.Error.length)
                writer.writeString(7, this.Error);
            if (this.TransactionComplete != false)
                writer.writeBool(8, this.TransactionComplete);
            var _loop_7 = function (key, value) {
                writer.writeMessage(9, this_7.Metadata, function () {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            };
            var this_7 = this;
            for (var _i = 0, _a = this.Metadata; _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                _loop_7(key, value);
            }
            if (!w)
                return writer.getResultBuffer();
        };
        QueuesDownstreamResponse.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueuesDownstreamResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.TransactionId = reader.readString();
                        break;
                    case 2:
                        message.RefRequestId = reader.readString();
                        break;
                    case 3:
                        message.RequestTypeData = reader.readEnum();
                        break;
                    case 4:
                        reader.readMessage(message.Messages, function () { return pb_1.Message.addToRepeatedWrapperField(message, 4, QueueMessage.deserialize(reader), QueueMessage); });
                        break;
                    case 5:
                        message.ActiveOffsets = reader.readPackedInt64();
                        break;
                    case 6:
                        message.IsError = reader.readBool();
                        break;
                    case 7:
                        message.Error = reader.readString();
                        break;
                    case 8:
                        message.TransactionComplete = reader.readBool();
                        break;
                    case 9:
                        reader.readMessage(message, function () { return pb_1.Map.deserializeBinary(message.Metadata, reader, reader.readString, reader.readString); });
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueuesDownstreamResponse.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueuesDownstreamResponse.deserializeBinary = function (bytes) {
            return QueuesDownstreamResponse.deserialize(bytes);
        };
        return QueuesDownstreamResponse;
    }(pb_1.Message));
    _QueuesDownstreamResponse_one_of_decls = new WeakMap();
    kubemq.QueuesDownstreamResponse = QueuesDownstreamResponse;
    var QueueInfo = /** @class */ (function (_super) {
        __extends(QueueInfo, _super);
        function QueueInfo(data) {
            var _this = _super.call(this) || this;
            _QueueInfo_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _QueueInfo_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("Name" in data && data.Name != undefined) {
                    _this.Name = data.Name;
                }
                if ("Messages" in data && data.Messages != undefined) {
                    _this.Messages = data.Messages;
                }
                if ("Bytes" in data && data.Bytes != undefined) {
                    _this.Bytes = data.Bytes;
                }
                if ("FirstSequence" in data && data.FirstSequence != undefined) {
                    _this.FirstSequence = data.FirstSequence;
                }
                if ("LastSequence" in data && data.LastSequence != undefined) {
                    _this.LastSequence = data.LastSequence;
                }
                if ("Sent" in data && data.Sent != undefined) {
                    _this.Sent = data.Sent;
                }
                if ("Delivered" in data && data.Delivered != undefined) {
                    _this.Delivered = data.Delivered;
                }
                if ("Waiting" in data && data.Waiting != undefined) {
                    _this.Waiting = data.Waiting;
                }
                if ("Subscribers" in data && data.Subscribers != undefined) {
                    _this.Subscribers = data.Subscribers;
                }
            }
            return _this;
        }
        Object.defineProperty(QueueInfo.prototype, "Name", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueInfo.prototype, "Messages", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueInfo.prototype, "Bytes", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueInfo.prototype, "FirstSequence", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueInfo.prototype, "LastSequence", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 5, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueInfo.prototype, "Sent", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 6, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 6, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueInfo.prototype, "Delivered", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 7, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 7, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueInfo.prototype, "Waiting", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 8, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 8, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueueInfo.prototype, "Subscribers", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 9, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 9, value);
            },
            enumerable: false,
            configurable: true
        });
        QueueInfo.fromObject = function (data) {
            var message = new QueueInfo({});
            if (data.Name != null) {
                message.Name = data.Name;
            }
            if (data.Messages != null) {
                message.Messages = data.Messages;
            }
            if (data.Bytes != null) {
                message.Bytes = data.Bytes;
            }
            if (data.FirstSequence != null) {
                message.FirstSequence = data.FirstSequence;
            }
            if (data.LastSequence != null) {
                message.LastSequence = data.LastSequence;
            }
            if (data.Sent != null) {
                message.Sent = data.Sent;
            }
            if (data.Delivered != null) {
                message.Delivered = data.Delivered;
            }
            if (data.Waiting != null) {
                message.Waiting = data.Waiting;
            }
            if (data.Subscribers != null) {
                message.Subscribers = data.Subscribers;
            }
            return message;
        };
        QueueInfo.prototype.toObject = function () {
            var data = {};
            if (this.Name != null) {
                data.Name = this.Name;
            }
            if (this.Messages != null) {
                data.Messages = this.Messages;
            }
            if (this.Bytes != null) {
                data.Bytes = this.Bytes;
            }
            if (this.FirstSequence != null) {
                data.FirstSequence = this.FirstSequence;
            }
            if (this.LastSequence != null) {
                data.LastSequence = this.LastSequence;
            }
            if (this.Sent != null) {
                data.Sent = this.Sent;
            }
            if (this.Delivered != null) {
                data.Delivered = this.Delivered;
            }
            if (this.Waiting != null) {
                data.Waiting = this.Waiting;
            }
            if (this.Subscribers != null) {
                data.Subscribers = this.Subscribers;
            }
            return data;
        };
        QueueInfo.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.Name.length)
                writer.writeString(1, this.Name);
            if (this.Messages != 0)
                writer.writeInt64(2, this.Messages);
            if (this.Bytes != 0)
                writer.writeInt64(3, this.Bytes);
            if (this.FirstSequence != 0)
                writer.writeInt64(4, this.FirstSequence);
            if (this.LastSequence != 0)
                writer.writeInt64(5, this.LastSequence);
            if (this.Sent != 0)
                writer.writeInt64(6, this.Sent);
            if (this.Delivered != 0)
                writer.writeInt64(7, this.Delivered);
            if (this.Waiting != 0)
                writer.writeInt64(8, this.Waiting);
            if (this.Subscribers != 0)
                writer.writeInt64(9, this.Subscribers);
            if (!w)
                return writer.getResultBuffer();
        };
        QueueInfo.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueueInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.Name = reader.readString();
                        break;
                    case 2:
                        message.Messages = reader.readInt64();
                        break;
                    case 3:
                        message.Bytes = reader.readInt64();
                        break;
                    case 4:
                        message.FirstSequence = reader.readInt64();
                        break;
                    case 5:
                        message.LastSequence = reader.readInt64();
                        break;
                    case 6:
                        message.Sent = reader.readInt64();
                        break;
                    case 7:
                        message.Delivered = reader.readInt64();
                        break;
                    case 8:
                        message.Waiting = reader.readInt64();
                        break;
                    case 9:
                        message.Subscribers = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueueInfo.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueueInfo.deserializeBinary = function (bytes) {
            return QueueInfo.deserialize(bytes);
        };
        return QueueInfo;
    }(pb_1.Message));
    _QueueInfo_one_of_decls = new WeakMap();
    kubemq.QueueInfo = QueueInfo;
    var QueuesInfo = /** @class */ (function (_super) {
        __extends(QueuesInfo, _super);
        function QueuesInfo(data) {
            var _this = _super.call(this) || this;
            _QueuesInfo_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [5], __classPrivateFieldGet(_this, _QueuesInfo_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("TotalQueue" in data && data.TotalQueue != undefined) {
                    _this.TotalQueue = data.TotalQueue;
                }
                if ("Sent" in data && data.Sent != undefined) {
                    _this.Sent = data.Sent;
                }
                if ("Delivered" in data && data.Delivered != undefined) {
                    _this.Delivered = data.Delivered;
                }
                if ("Waiting" in data && data.Waiting != undefined) {
                    _this.Waiting = data.Waiting;
                }
                if ("Queues" in data && data.Queues != undefined) {
                    _this.Queues = data.Queues;
                }
            }
            return _this;
        }
        Object.defineProperty(QueuesInfo.prototype, "TotalQueue", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesInfo.prototype, "Sent", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesInfo.prototype, "Delivered", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 3, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 3, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesInfo.prototype, "Waiting", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 4, 0);
            },
            set: function (value) {
                pb_1.Message.setField(this, 4, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesInfo.prototype, "Queues", {
            get: function () {
                return pb_1.Message.getRepeatedWrapperField(this, QueueInfo, 5);
            },
            set: function (value) {
                pb_1.Message.setRepeatedWrapperField(this, 5, value);
            },
            enumerable: false,
            configurable: true
        });
        QueuesInfo.fromObject = function (data) {
            var message = new QueuesInfo({});
            if (data.TotalQueue != null) {
                message.TotalQueue = data.TotalQueue;
            }
            if (data.Sent != null) {
                message.Sent = data.Sent;
            }
            if (data.Delivered != null) {
                message.Delivered = data.Delivered;
            }
            if (data.Waiting != null) {
                message.Waiting = data.Waiting;
            }
            if (data.Queues != null) {
                message.Queues = data.Queues.map(function (item) { return QueueInfo.fromObject(item); });
            }
            return message;
        };
        QueuesInfo.prototype.toObject = function () {
            var data = {};
            if (this.TotalQueue != null) {
                data.TotalQueue = this.TotalQueue;
            }
            if (this.Sent != null) {
                data.Sent = this.Sent;
            }
            if (this.Delivered != null) {
                data.Delivered = this.Delivered;
            }
            if (this.Waiting != null) {
                data.Waiting = this.Waiting;
            }
            if (this.Queues != null) {
                data.Queues = this.Queues.map(function (item) { return item.toObject(); });
            }
            return data;
        };
        QueuesInfo.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.TotalQueue != 0)
                writer.writeInt32(1, this.TotalQueue);
            if (this.Sent != 0)
                writer.writeInt64(2, this.Sent);
            if (this.Delivered != 0)
                writer.writeInt64(3, this.Delivered);
            if (this.Waiting != 0)
                writer.writeInt64(4, this.Waiting);
            if (this.Queues.length)
                writer.writeRepeatedMessage(5, this.Queues, function (item) { return item.serialize(writer); });
            if (!w)
                return writer.getResultBuffer();
        };
        QueuesInfo.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueuesInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.TotalQueue = reader.readInt32();
                        break;
                    case 2:
                        message.Sent = reader.readInt64();
                        break;
                    case 3:
                        message.Delivered = reader.readInt64();
                        break;
                    case 4:
                        message.Waiting = reader.readInt64();
                        break;
                    case 5:
                        reader.readMessage(message.Queues, function () { return pb_1.Message.addToRepeatedWrapperField(message, 5, QueueInfo.deserialize(reader), QueueInfo); });
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueuesInfo.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueuesInfo.deserializeBinary = function (bytes) {
            return QueuesInfo.deserialize(bytes);
        };
        return QueuesInfo;
    }(pb_1.Message));
    _QueuesInfo_one_of_decls = new WeakMap();
    kubemq.QueuesInfo = QueuesInfo;
    var QueuesInfoRequest = /** @class */ (function (_super) {
        __extends(QueuesInfoRequest, _super);
        function QueuesInfoRequest(data) {
            var _this = _super.call(this) || this;
            _QueuesInfoRequest_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _QueuesInfoRequest_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("RequestID" in data && data.RequestID != undefined) {
                    _this.RequestID = data.RequestID;
                }
                if ("QueueName" in data && data.QueueName != undefined) {
                    _this.QueueName = data.QueueName;
                }
            }
            return _this;
        }
        Object.defineProperty(QueuesInfoRequest.prototype, "RequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesInfoRequest.prototype, "QueueName", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 2, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        QueuesInfoRequest.fromObject = function (data) {
            var message = new QueuesInfoRequest({});
            if (data.RequestID != null) {
                message.RequestID = data.RequestID;
            }
            if (data.QueueName != null) {
                message.QueueName = data.QueueName;
            }
            return message;
        };
        QueuesInfoRequest.prototype.toObject = function () {
            var data = {};
            if (this.RequestID != null) {
                data.RequestID = this.RequestID;
            }
            if (this.QueueName != null) {
                data.QueueName = this.QueueName;
            }
            return data;
        };
        QueuesInfoRequest.prototype.serialize = function (w) {
            var writer = w || new pb_1.BinaryWriter();
            if (this.RequestID.length)
                writer.writeString(1, this.RequestID);
            if (this.QueueName.length)
                writer.writeString(2, this.QueueName);
            if (!w)
                return writer.getResultBuffer();
        };
        QueuesInfoRequest.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueuesInfoRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.RequestID = reader.readString();
                        break;
                    case 2:
                        message.QueueName = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueuesInfoRequest.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueuesInfoRequest.deserializeBinary = function (bytes) {
            return QueuesInfoRequest.deserialize(bytes);
        };
        return QueuesInfoRequest;
    }(pb_1.Message));
    _QueuesInfoRequest_one_of_decls = new WeakMap();
    kubemq.QueuesInfoRequest = QueuesInfoRequest;
    var QueuesInfoResponse = /** @class */ (function (_super) {
        __extends(QueuesInfoResponse, _super);
        function QueuesInfoResponse(data) {
            var _this = _super.call(this) || this;
            _QueuesInfoResponse_one_of_decls.set(_this, []);
            pb_1.Message.initialize(_this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(_this, _QueuesInfoResponse_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("RefRequestID" in data && data.RefRequestID != undefined) {
                    _this.RefRequestID = data.RefRequestID;
                }
                if ("Info" in data && data.Info != undefined) {
                    _this.Info = data.Info;
                }
            }
            return _this;
        }
        Object.defineProperty(QueuesInfoResponse.prototype, "RefRequestID", {
            get: function () {
                return pb_1.Message.getFieldWithDefault(this, 1, "");
            },
            set: function (value) {
                pb_1.Message.setField(this, 1, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesInfoResponse.prototype, "Info", {
            get: function () {
                return pb_1.Message.getWrapperField(this, QueuesInfo, 2);
            },
            set: function (value) {
                pb_1.Message.setWrapperField(this, 2, value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueuesInfoResponse.prototype, "has_Info", {
            get: function () {
                return pb_1.Message.getField(this, 2) != null;
            },
            enumerable: false,
            configurable: true
        });
        QueuesInfoResponse.fromObject = function (data) {
            var message = new QueuesInfoResponse({});
            if (data.RefRequestID != null) {
                message.RefRequestID = data.RefRequestID;
            }
            if (data.Info != null) {
                message.Info = QueuesInfo.fromObject(data.Info);
            }
            return message;
        };
        QueuesInfoResponse.prototype.toObject = function () {
            var data = {};
            if (this.RefRequestID != null) {
                data.RefRequestID = this.RefRequestID;
            }
            if (this.Info != null) {
                data.Info = this.Info.toObject();
            }
            return data;
        };
        QueuesInfoResponse.prototype.serialize = function (w) {
            var _this = this;
            var writer = w || new pb_1.BinaryWriter();
            if (this.RefRequestID.length)
                writer.writeString(1, this.RefRequestID);
            if (this.has_Info)
                writer.writeMessage(2, this.Info, function () { return _this.Info.serialize(writer); });
            if (!w)
                return writer.getResultBuffer();
        };
        QueuesInfoResponse.deserialize = function (bytes) {
            var reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueuesInfoResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.RefRequestID = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.Info, function () { return message.Info = QueuesInfo.deserialize(reader); });
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        };
        QueuesInfoResponse.prototype.serializeBinary = function () {
            return this.serialize();
        };
        QueuesInfoResponse.deserializeBinary = function (bytes) {
            return QueuesInfoResponse.deserialize(bytes);
        };
        return QueuesInfoResponse;
    }(pb_1.Message));
    _QueuesInfoResponse_one_of_decls = new WeakMap();
    kubemq.QueuesInfoResponse = QueuesInfoResponse;
    var UnimplementedkubemqService = /** @class */ (function () {
        function UnimplementedkubemqService() {
        }
        UnimplementedkubemqService.definition = {
            SendEvent: {
                path: "/kubemq.kubemq/SendEvent",
                requestStream: false,
                responseStream: false,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return Event.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return Result.deserialize(new Uint8Array(bytes)); }
            },
            SendEventsStream: {
                path: "/kubemq.kubemq/SendEventsStream",
                requestStream: true,
                responseStream: true,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return Event.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return Result.deserialize(new Uint8Array(bytes)); }
            },
            SubscribeToEvents: {
                path: "/kubemq.kubemq/SubscribeToEvents",
                requestStream: false,
                responseStream: true,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return Subscribe.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return EventReceive.deserialize(new Uint8Array(bytes)); }
            },
            SubscribeToRequests: {
                path: "/kubemq.kubemq/SubscribeToRequests",
                requestStream: false,
                responseStream: true,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return Subscribe.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return Request.deserialize(new Uint8Array(bytes)); }
            },
            SendRequest: {
                path: "/kubemq.kubemq/SendRequest",
                requestStream: false,
                responseStream: false,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return Request.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return Response.deserialize(new Uint8Array(bytes)); }
            },
            SendResponse: {
                path: "/kubemq.kubemq/SendResponse",
                requestStream: false,
                responseStream: false,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return Response.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return Empty.deserialize(new Uint8Array(bytes)); }
            },
            SendQueueMessage: {
                path: "/kubemq.kubemq/SendQueueMessage",
                requestStream: false,
                responseStream: false,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return QueueMessage.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return SendQueueMessageResult.deserialize(new Uint8Array(bytes)); }
            },
            SendQueueMessagesBatch: {
                path: "/kubemq.kubemq/SendQueueMessagesBatch",
                requestStream: false,
                responseStream: false,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return QueueMessagesBatchRequest.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return QueueMessagesBatchResponse.deserialize(new Uint8Array(bytes)); }
            },
            ReceiveQueueMessages: {
                path: "/kubemq.kubemq/ReceiveQueueMessages",
                requestStream: false,
                responseStream: false,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return ReceiveQueueMessagesRequest.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return ReceiveQueueMessagesResponse.deserialize(new Uint8Array(bytes)); }
            },
            StreamQueueMessage: {
                path: "/kubemq.kubemq/StreamQueueMessage",
                requestStream: true,
                responseStream: true,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return StreamQueueMessagesRequest.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return StreamQueueMessagesResponse.deserialize(new Uint8Array(bytes)); }
            },
            AckAllQueueMessages: {
                path: "/kubemq.kubemq/AckAllQueueMessages",
                requestStream: false,
                responseStream: false,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return AckAllQueueMessagesRequest.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return AckAllQueueMessagesResponse.deserialize(new Uint8Array(bytes)); }
            },
            Ping: {
                path: "/kubemq.kubemq/Ping",
                requestStream: false,
                responseStream: false,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return Empty.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return PingResult.deserialize(new Uint8Array(bytes)); }
            },
            QueuesDownstream: {
                path: "/kubemq.kubemq/QueuesDownstream",
                requestStream: true,
                responseStream: true,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return QueuesDownstreamRequest.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return QueuesDownstreamResponse.deserialize(new Uint8Array(bytes)); }
            },
            QueuesUpstream: {
                path: "/kubemq.kubemq/QueuesUpstream",
                requestStream: true,
                responseStream: true,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return QueuesUpstreamRequest.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return QueuesUpstreamResponse.deserialize(new Uint8Array(bytes)); }
            },
            QueuesInfo: {
                path: "/kubemq.kubemq/QueuesInfo",
                requestStream: false,
                responseStream: false,
                requestSerialize: function (message) { return Buffer.from(message.serialize()); },
                requestDeserialize: function (bytes) { return QueuesInfoRequest.deserialize(new Uint8Array(bytes)); },
                responseSerialize: function (message) { return Buffer.from(message.serialize()); },
                responseDeserialize: function (bytes) { return QueuesInfoResponse.deserialize(new Uint8Array(bytes)); }
            }
        };
        return UnimplementedkubemqService;
    }());
    kubemq.UnimplementedkubemqService = UnimplementedkubemqService;
    var kubemqClient = /** @class */ (function (_super) {
        __extends(kubemqClient, _super);
        function kubemqClient(address, credentials, options) {
            var _this = _super.call(this, address, credentials, options) || this;
            _this.SendEvent = function (message, metadata, options, callback) {
                return _super.prototype.SendEvent.call(_this, message, metadata, options, callback);
            };
            _this.SendEventsStream = function (metadata, options) {
                return _super.prototype.SendEventsStream.call(_this, metadata, options);
            };
            _this.SubscribeToEvents = function (message, metadata, options) {
                return _super.prototype.SubscribeToEvents.call(_this, message, metadata, options);
            };
            _this.SubscribeToRequests = function (message, metadata, options) {
                return _super.prototype.SubscribeToRequests.call(_this, message, metadata, options);
            };
            _this.SendRequest = function (message, metadata, options, callback) {
                return _super.prototype.SendRequest.call(_this, message, metadata, options, callback);
            };
            _this.SendResponse = function (message, metadata, options, callback) {
                return _super.prototype.SendResponse.call(_this, message, metadata, options, callback);
            };
            _this.SendQueueMessage = function (message, metadata, options, callback) {
                return _super.prototype.SendQueueMessage.call(_this, message, metadata, options, callback);
            };
            _this.SendQueueMessagesBatch = function (message, metadata, options, callback) {
                return _super.prototype.SendQueueMessagesBatch.call(_this, message, metadata, options, callback);
            };
            _this.ReceiveQueueMessages = function (message, metadata, options, callback) {
                return _super.prototype.ReceiveQueueMessages.call(_this, message, metadata, options, callback);
            };
            _this.StreamQueueMessage = function (metadata, options) {
                return _super.prototype.StreamQueueMessage.call(_this, metadata, options);
            };
            _this.AckAllQueueMessages = function (message, metadata, options, callback) {
                return _super.prototype.AckAllQueueMessages.call(_this, message, metadata, options, callback);
            };
            _this.Ping = function (message, metadata, options, callback) {
                return _super.prototype.Ping.call(_this, message, metadata, options, callback);
            };
            _this.QueuesDownstream = function (metadata, options) {
                return _super.prototype.QueuesDownstream.call(_this, metadata, options);
            };
            _this.QueuesUpstream = function (metadata, options) {
                return _super.prototype.QueuesUpstream.call(_this, metadata, options);
            };
            _this.QueuesInfo = function (message, metadata, options, callback) {
                return _super.prototype.QueuesInfo.call(_this, message, metadata, options, callback);
            };
            return _this;
        }
        return kubemqClient;
    }(grpc_1.makeGenericClientConstructor(UnimplementedkubemqService.definition, "kubemq", {})));
    kubemq.kubemqClient = kubemqClient;
})(kubemq || (exports.kubemq = kubemq = {}));
